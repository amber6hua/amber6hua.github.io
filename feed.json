{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amber",
    "subtitle": "六花丶紫",
    "icon": "https://amber6hua.github.io/images/favicon.ico",
    "description": "Amber Room",
    "home_page_url": "https://amber6hua.github.io",
    "items": [
        {
            "id": "https://amber6hua.github.io/linux-frpc-https/",
            "url": "https://amber6hua.github.io/linux-frpc-https/",
            "title": "Linux下使用frp内网穿透http|https和申请ssl证书",
            "date_published": "2024-09-29T02:30:58.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>frpc 是一个开源的用于内网穿透的高性能的反向代理应用，它可以让外部网络访问在 NAT 网络之后的内网服务。<br />\n连接类型支持 TCP、UDP、HTTP、HTTPS 等协议。<br />\n其中 TCP、UDP 协议的穿透方式比较简单，本文主要介绍如何使用 frpc 穿透 http 和 https 协议，配置自定义域名。</p>\n<h2 id=\"安装frpc\"><a class=\"anchor\" href=\"#安装frpc\">#</a> 安装 frpc</h2>\n<p>因为没用公网服务器和本地也没有公网 ip，所以找了第三方 frp 服务，一般会提供下载链接，直接下载安装即可。</p>\n<h2 id=\"配置frpc\"><a class=\"anchor\" href=\"#配置frpc\">#</a> 配置 frpc</h2>\n<p>一般配置文件为 frpc.ini 和 frpc.toml，这里以 frpc.toml 配置文件为例</p>\n<p>主要参数 customDomains 配置域名 需要配置域名解析</p>\n<p>比方说域名绑定在 cloudflare，需要配置 DNS 解析</p>\n<p>类型为 CNAME 记录类型 域名 指向 服务器地址</p>\n<h3 id=\"配置http\"><a class=\"anchor\" href=\"#配置http\">#</a> 配置 http</h3>\n<p>配置文件只展示部分基本内容，具体配置文件可以参考官方文档<br />\n启动 frpc 后，访问自定义域名即可 <span class=\"exturl\" data-url=\"aHR0cDovL3Rlc3QuZXhhbXBsZS5jb20=\">http://test.example.com</span></p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>serverAddr = \"serverUrl\"  <span class=\"token comment\">## 服务器地址</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>serverPort = 7000         <span class=\"token comment\">## 服务器端口</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>proxies<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>name = \"test\"             <span class=\"token comment\">## 代理名称</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>type = \"http\"             <span class=\"token comment\">## 代理类型</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>localIP = \"127.0.0.1\"     <span class=\"token comment\">## 本地服务地址</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>localPort = 8080          <span class=\"token comment\">## 本地服务端口</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>customDomains = <span class=\"token punctuation\">[</span><span class=\"token string\">\"test.example.com\"</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">## 自定义域名</span></pre></td></tr></table></figure><h3 id=\"配置https\"><a class=\"anchor\" href=\"#配置https\">#</a> 配置 https</h3>\n<p>配置文件只展示部分基本内容，具体配置文件可以参考官方文档</p>\n<p>https 和 http 无法直接通信，所以需要使用插件 https2http</p>\n<p>启动 frpc 后，访问自定义域名即可 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZXN0LmV4YW1wbGUuY29t\">https://test.example.com</span></p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>serverAddr = \"serverUrl\"  <span class=\"token comment\">## 服务器地址</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>serverPort = 7000         <span class=\"token comment\">## 服务器端口</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>proxies<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>name = \"test\"             <span class=\"token comment\">## 代理名称</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>type = \"https\"            <span class=\"token comment\">## 代理类型</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>customDomains = <span class=\"token punctuation\">[</span><span class=\"token string\">\"test.example.com\"</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">## 自定义域名</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>proxies.plugin<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>type = \"https2http\"             <span class=\"token comment\">## 插件类型</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>localAddr = \"127.0.0.1<span class=\"token punctuation\">:</span>8080\"    <span class=\"token comment\">## 本地服务地址</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># HTTPS 证书相关的配置</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>crtPath = \"./test.crt\"          <span class=\"token comment\">## 证书路径</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>keyPath = \"./test.key\"          <span class=\"token comment\">## 证书密钥路径</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>hostHeaderRewrite = \"test.example.com\"      <span class=\"token comment\">## 主机头重写 因为个人需要获取 host, 所以配置。没配置的时候，获取到了 127.0.0.1:8080</span></pre></td></tr></table></figure><h2 id=\"申请ssl证书\"><a class=\"anchor\" href=\"#申请ssl证书\">#</a> 申请 SSL 证书</h2>\n<p>申请 SSL 证书通常需要域名解析，上面 frp 自定义域名时，已经配置了 DNS 解析，所以这里申请证书时，直接使用自定义域名即可。</p>\n<p>可以使用 certbot 申请证书，具体操作可以参考官方文档</p>\n<div class=\"note info\">\n<p>踩坑过程<br />\n Let’s Encrypt 证书使用 ACME 协议来验证域名所有权。Certbot 提供两种常见的验证方式：<br />\nHTTP-01 验证：Certbot 通过一个临时的 HTTP 文件验证你对域名的控制。<br />\nDNS-01 验证：通过 DNS TXT 记录验证域名所有权，适用于子域名或没有直接 HTTP 访问的情况。</p>\n<p>一开始采用 HTTP-01 验证申请的二级域名证书<br />\n需要一个可访问的 http, 所以先在本地创建 nginx web 服务，再内网穿透出去，再申请证书。<br />\n后来发现可以用 DNS-01 验证，并且直接申请了通配符证书，不要这些麻烦的步骤。<br />\n虽然走弯路，但还是有收获，所以这里记录下我申请证书的过程。</p>\n</div>\n<h2 id=\"http-01验证方式\"><a class=\"anchor\" href=\"#http-01验证方式\">#</a> HTTP-01 验证方式</h2>\n<p>本人喜欢使用 docker，所以都是 docker 部署</p>\n<h3 id=\"本地创建nginx-web服务\"><a class=\"anchor\" href=\"#本地创建nginx-web服务\">#</a> 本地创建 nginx web 服务</h3>\n<ul>\n<li>创建临时 web 目录</li>\n<li>创建 nginx 配置文件</li>\n<li>启动容器</li>\n<li>最后配置启动 http 内网穿透，HTTP-01 验证，需要的环境就准备好了</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">## 创建临时 web 目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">mkdir</span> -p tmpWeb/con.d</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">cd</span> tmpWeb</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">## 创建 nginx 配置文件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token operator\">></span> tmpWeb/con.d/default.conf <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>server &#123;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    listen 80;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    server_name test.example.com;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    # 申请证书需要访问http://test.example.com/.well-known/acme-challenge/  所以需要先内网穿透出去</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    location /.well-known/acme-challenge/ &#123;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        root /var/www/wwwroot;  # 确保这里的路径是正确的 容器内web路径 与下面的申请证书中的--webroot路径一致</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    # 其他配置</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>EOF</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">## 启动容器</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>docker run -d --restart<span class=\"token operator\">=</span>unless-stopped <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  -p <span class=\"token number\">8000</span>:80 <span class=\"token punctuation\">\\</span>                               <span class=\"token comment\">## 映射端口</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  -v <span class=\"token environment constant\">$PWD</span>/conf.d:/etc/nginx/conf.d <span class=\"token punctuation\">\\</span>         <span class=\"token comment\">## 映射配置文件</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  -v <span class=\"token environment constant\">$PWD</span>/wwwroot:/var/www/wwwroot <span class=\"token punctuation\">\\</span>         <span class=\"token comment\">## 映射 web 路径 其实不需要映射，因为不需要访问</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  --name<span class=\"token operator\">=</span>tempWeb nginx:mainline-alpine3.18-slim</pre></td></tr></table></figure><h3 id=\"docker-certbot-申请证书\"><a class=\"anchor\" href=\"#docker-certbot-申请证书\">#</a> docker certbot 申请证书</h3>\n<p>通过 docker 执行 certbot 申请证书<br />\n容器第一次启动 需要填邮箱，用于创建账户并发送验证邮件。<br />\n通过 HTTP-01 验证 完成申请证书</p>\n<p>证书获取后，会存放在 certs/live/yourdomain.com/ 下，包括以下文件：<br />\ncert.pem: 证书文件<br />\n chain.pem: 证书链文件<br />\n fullchain.pem: 包含完整的证书链<br />\n privkey.pem: 私钥文件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -it --rm <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  -v <span class=\"token environment constant\">$PWD</span>/certs:/etc/letsencrypt <span class=\"token punctuation\">\\</span>          <span class=\"token comment\">## 映射证书路径</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  -v <span class=\"token environment constant\">$PWD</span>/wwwroot:/var/www/wwwroot <span class=\"token punctuation\">\\</span>        <span class=\"token comment\">## 映射 web 路径 其实不需要映射，因为不需要访问</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  certbot/certbot certonly <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  --webroot -w /var/www/wwwroot <span class=\"token punctuation\">\\</span>           <span class=\"token comment\">## 与 nginx 配置文件中的路径一致</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   -d test.example.com</pre></td></tr></table></figure><h3 id=\"续订证书\"><a class=\"anchor\" href=\"#续订证书\">#</a> 续订证书</h3>\n<p>Let’s Encrypt 证书的有效期是 90 天，因此需要定期更新证书。<br />\nCertbot 提供了自动更新的功能：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1yZW5ldy13eDFobTNhZ2E2NzhjM29hNzVzMHdiODc3Z3dwOGN4bTBhZHI2YmNwYS5zaA==\">可以把续订证书的命令写入 renew.sh</span>, 并且添加到 crontab 中，让它每天自动运行一次。</p>\n<p>chmod +x <span class=\"exturl\" data-url=\"aHR0cDovL3JlbmV3LnNo\">renew.sh</span></p>\n<p>crontab -e</p>\n<p>0 0 * * * /your_dir/renew.sh</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -it --rm <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  -v <span class=\"token environment constant\">$PWD</span>/certs:/etc/letsencrypt <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  certbot/certbot renew <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  --deploy-hook <span class=\"token string\">\"nginx -s reload\"</span>                 <span class=\"token comment\">##  续订后证书改变 需要重新加载 nginx 根据自己的情况修改命令</span></pre></td></tr></table></figure><h2 id=\"dns-01验证方式\"><a class=\"anchor\" href=\"#dns-01验证方式\">#</a> DNS-01 验证方式</h2>\n<h3 id=\"申请二级域名证书\"><a class=\"anchor\" href=\"#申请二级域名证书\">#</a> 申请二级域名证书</h3>\n<p>之前已经通过 HTTP-01 验证方式申请了二级域名证书，所以不会再要求填写邮箱<br />\n容器运行后，提示在通过 txt 的方式完成域名解析，给到的 name 和 value 添加到对应的域名 dns 解析中</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -it --rm <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  -v <span class=\"token environment constant\">$PWD</span>/certs:/etc/letsencrypt <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  certbot/certbot certonly <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  --manual --preferred-challenges dns <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  -d test.example.com</pre></td></tr></table></figure><h2 id=\"通过api方式-申请通配符证书\"><a class=\"anchor\" href=\"#通过api方式-申请通配符证书\">#</a> 通过 api 方式 申请通配符证书</h2>\n<p>如果你的 DNS 提供商支持 API，你可以使用 Certbot 的相应插件。<br />\n首先，查找适合你 DNS 提供商的插件，并在 Docker 中安装。<br />\n例如，对于 Cloudflare，你可以使用 certbot-dns-cloudflare。</p>\n<p>然后，在当前目录创建一个包含你的 API 凭据的文件 cloudflare.ini</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dns_cloudflare_email = &lt;EMAIL<span class=\"token punctuation\">></span>      <span class=\"token comment\">## 账户邮箱</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dns_cloudflare_api_key = &lt;KEY<span class=\"token punctuation\">></span>      <span class=\"token comment\">## 账户 api key, 可以在 cloudflare 个人资料 API 令牌中获取 Global API Key</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -it --rm --name certbot <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  -v <span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>/config:/etc/letsencrypt\"</span> <span class=\"token punctuation\">\\</span>             <span class=\"token comment\">## 映射证书路径</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  -v <span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>/logs:/var/log/letsencrypt\"</span> <span class=\"token punctuation\">\\</span>           <span class=\"token comment\">## 映射日志路径</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  -v <span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>/cloudflare.ini:/cloudflare.ini\"</span> <span class=\"token punctuation\">\\</span>      <span class=\"token comment\">## 映射配置文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  certbot/dns-cloudflare certonly <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  --dns-cloudflare <span class=\"token punctuation\">\\</span>                              <span class=\"token comment\">## 指定 dns 插件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  --dns-cloudflare-credentials /cloudflare.ini <span class=\"token punctuation\">\\</span>  <span class=\"token comment\">## 指定配置文件</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  --email youemail@email.com <span class=\"token punctuation\">\\</span>                    <span class=\"token comment\">## 知道账户邮箱</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  --agree-tos <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  -d <span class=\"token string\">'*.example.com'</span> -d example.com               <span class=\"token comment\">## 需要申请证书的域名</span></pre></td></tr></table></figure><h3 id=\"续订证书-2\"><a class=\"anchor\" href=\"#续订证书-2\">#</a> 续订证书</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1yZW5ldy13eDFobTNhZ2E2NzhjM29hNzVzMHdiODc3Z3dwOGN4bTBhZHI2YmNwYS5zaA==\">可以把续订证书的命令写入 renew.sh</span>, 并且添加到 crontab 中，让它每天自动运行一次。<br />\nchmod +x <span class=\"exturl\" data-url=\"aHR0cDovL3JlbmV3LnNo\">renew.sh</span></p>\n<p>crontab -e</p>\n<p>0 0 * * * /your_dir/renew.sh</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run --rm <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  -v <span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>/config:/etc/letsencrypt\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  -v <span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>/logs:/var/log/letsencrypt\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  -v <span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>/cloudflare.ini:/cloudflare.ini\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  certbot/dns-cloudflare renew </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  --deploy-hook <span class=\"token string\">\"nginx -s reload\"</span>                 <span class=\"token comment\">##  续订后证书改变 需要重新加载 nginx 根据自己的情况修改命令</span></pre></td></tr></table></figure><h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>记录下 frp https 和 ssl 申请证书的过程，希望对你有帮助。</p>\n",
            "tags": [
                "Linux",
                "教程",
                "Linux"
            ]
        },
        {
            "id": "https://amber6hua.github.io/vi-visual/",
            "url": "https://amber6hua.github.io/vi-visual/",
            "title": "vim编辑器鼠标右键无法粘贴，而是进入insert visual模式的解决方法",
            "date_published": "2024-08-06T09:31:36.000Z",
            "content_html": "<h2 id=\"原文链接\"><a class=\"anchor\" href=\"#原文链接\">#</a> 原文链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQyOTkyNC9hcnRpY2xlL2RldGFpbHMvMTM2OTAwNjMz\">https://blog.csdn.net/weixin_45429924/article/details/136900633</span></li>\n</ul>\n<h2 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法</h2>\n<blockquote>\n<p>首先寻找 vim 的配置文件：</p>\n</blockquote>\n<pre><code>find / -name &quot;defaults.vim&quot;\n\n/usr/share/vim/vim82/defaults.vim\n</code></pre>\n<blockquote>\n<p>可以看到第一个结果是在 vim 目录下，所以是 vim 的配置文件，对文件内容进行编辑</p>\n</blockquote>\n<pre><code>vim /usr/share/vim/vim82/defaults.vim\n\n·········\nif has('mouse')\n  if &amp;term =~ 'xterm'\n    set mouse=a  #找到这行，将等号右边的值改为“r”\n  else\n    set mouse=nvi\n  endif\nendif\n·········\n\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "https://amber6hua.github.io/hax-vps/",
            "url": "https://amber6hua.github.io/hax-vps/",
            "title": "Hax VPS 仅ipv6怎么玩",
            "date_published": "2024-08-06T08:40:15.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYXguY28uaWQv\">Hax VPS</span> 仅支持 ipv6 7 天续期</p>\n<h2 id=\"linux系统\"><a class=\"anchor\" href=\"#linux系统\">#</a> linux 系统</h2>\n<p>Debian 11<br />\n 支持 LXC</p>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubm9kZXNlZWsuY29tL3Bvc3QtNTQ3MDQtMQ==\">https://www.nodeseek.com/post-54704-1</span></li>\n</ul>\n<h2 id=\"为ipv6-vps添加一个ipv4地址\"><a class=\"anchor\" href=\"#为ipv6-vps添加一个ipv4地址\">#</a> 为 ipv6 VPS 添加一个 ipv4 地址</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZzY2FybWVuL3dhcnAtc2g=\">warp-sh</span></p>\n<p>因为有些 Linux 的源只有 ipv4，所以 ipv6 的机器可以先通过 warp 获取一个 ipv4 地址。</p>\n<p>确保你的 LXC VPS 已经开启 tun/tap，如果没开启 warp 装不上<br />\n LXC 查看 tun/tap 是否开启，ls /dev/net/, 如果返回 tun 则正常，不返回则未开启。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">wget</span> <span class=\"token function\">curl</span> -y</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">wget</span> -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">bash</span> menu.sh</pre></td></tr></table></figure><blockquote>\n<p>显示菜单</p>\n</blockquote>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>1.  为 IPv6 only 添加 WARP IPv4 网络接口 (bash menu.sh 4) </pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 2.  为 IPv6 only 添加 WARP IPv6 网络接口 (bash menu.sh 6) </pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 3.  为 IPv6 only 添加 WARP 双栈网络接口 (bash menu.sh d) </pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 4.  打开 WARP (warp o) </pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 5.  安装 CloudFlare Client 并设置为 Proxy 模式 (bash menu.sh c) </pre></td></tr><tr><td data-num=\"6\"></td><td><pre> 6.  更换支持 Netflix 的 IP (warp i) </pre></td></tr><tr><td data-num=\"7\"></td><td><pre> 7.  永久关闭 WARP 网络接口，并删除 WARP、 Linux Client 和 WireProxy (warp u) </pre></td></tr><tr><td data-num=\"8\"></td><td><pre> 8.  刷 WARP+ 流量 (warp p) </pre></td></tr><tr><td data-num=\"9\"></td><td><pre> 9.  升级内核、安装BBR、DD脚本 (warp b) </pre></td></tr><tr><td data-num=\"10\"></td><td><pre> 10. 同步最新版本 (warp v) </pre></td></tr><tr><td data-num=\"11\"></td><td><pre> 11. WARP 解锁 Netflix 等流媒体专业一键(支持多平台、多方式和 TG 通知) </pre></td></tr><tr><td data-num=\"12\"></td><td><pre> 12. 安装 iptable + dnsmasq + ipset，让 WARP IPv4 only 接管流媒体流量 (不适用于 IPv6 only VPS) (bash menu.sh e) </pre></td></tr><tr><td data-num=\"13\"></td><td><pre> 13. 安装 wireproxy，让 WARP 在本地创建一个 socks5 代理 (bash menu.sh w) </pre></td></tr><tr><td data-num=\"14\"></td><td><pre> 14. 安装 CloudFlare Client 并设置为 WARP 模式 (bash menu.sh l) </pre></td></tr><tr><td data-num=\"15\"></td><td><pre> 0.  退出脚本</pre></td></tr></table></figure><p>ipv6 only 的机器选择 第一项 即可，然后一路回车全部默认即可。<br />\n成功后会会出现如下提示</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>后台获取 WARP IP 中<span class=\"token punctuation\">,</span>最大尝试3次……</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>第1次尝试</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>已成功获取 WARP Free 网络<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">工作模式</span><span class=\"token punctuation\">:</span> 全局</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>==============================================================</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">IPv4</span><span class=\"token punctuation\">:</span> 104.28.243.190 法国  Cloudflare<span class=\"token punctuation\">,</span> Inc.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">IPv6</span><span class=\"token punctuation\">:</span> 2001<span class=\"token punctuation\">:</span>41d0<span class=\"token punctuation\">:</span>a<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>f<span class=\"token punctuation\">:</span>3c14 法国  OVH SAS</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key atrule\">恭喜！WARP Free 已开启，总耗时:18秒， 脚本当天运行次数:，累计运行次数</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>IPv6 优先 <span class=\"token punctuation\">,</span> <span class=\"token key atrule\">工作模式</span><span class=\"token punctuation\">:</span> 全局</pre></td></tr></table></figure><p>至此，你的 VPS 已经拥有 ipv4 仅出口和端口全部开放的 ipv6 地址了</p>\n<p>除了不能通过 ipv4 访问，其它与普通 VPS 无异了。</p>\n<h2 id=\"自定义ipv6-dns\"><a class=\"anchor\" href=\"#自定义ipv6-dns\">#</a> 自定义 ipv6 DNS</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /etc/resolv.conf</pre></td></tr></table></figure><blockquote>\n<p>修改为如下内容</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nameserver <span class=\"token number\">2606</span>:4700:4700::1111</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>nameserver <span class=\"token number\">2001</span>:4860:4860::8888</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>nameserver <span class=\"token number\">2001</span>:4860:4860::8844</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>nameserver <span class=\"token number\">1.1</span>.1.1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>nameserver <span class=\"token number\">8.8</span>.8.8</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>nameserver <span class=\"token number\">8.8</span>.4.4</pre></td></tr></table></figure><h2 id=\"github映射hosts文件\"><a class=\"anchor\" href=\"#github映射hosts文件\">#</a> github 映射 hosts 文件</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /etc/hosts</pre></td></tr></table></figure><blockquote>\n<p>添加如下内容</p>\n</blockquote>\n<pre><code>2a01:4f8:c010:d56::2 github.com\n2a01:4f8:c010:d56::3 api.github.com\n2a01:4f8:c010:d56::4 codeload.github.com\n2a01:4f8:c010:d56::5 objects.githubusercontent.com\n2a01:4f8:c010:d56::6 ghcr.io\n2a01:4f8:c010:d56::7 pkg.github.com npm.pkg.github.com maven.pkg.github.com nuget.pkg.github.com rubygems.pkg.github.com\n</code></pre>\n<h2 id=\"修改apt源\"><a class=\"anchor\" href=\"#修改apt源\">#</a> 修改 apt 源</h2>\n<blockquote>\n<p>备份源列表</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak</pre></td></tr></table></figure><blockquote>\n<p>修改 ipv6 源列表</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /etc/apt/sources.list</pre></td></tr></table></figure><blockquote>\n<p>修改为如下内容</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>deb https://mirrors6.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># deb-src https://mirrors6.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>deb https://mirrors6.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># deb-src https://mirrors6.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>deb https://mirrors6.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># deb-src https://mirrors6.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 以下安全更新软件源包含了官方源与镜像站配置，如有需要可自行修改注释切换</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>deb https://security.debian.org/debian-security bullseye-security main contrib non-free</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># deb-src https://security.debian.org/debian-security bullseye-security main contrib non-free</span></pre></td></tr></table></figure><h2 id=\"安装docker\"><a class=\"anchor\" href=\"#安装docker\">#</a> 安装 docker</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -fsSL https://get.docker.com -o get-docker.sh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> get-docker.sh</pre></td></tr></table></figure><h2 id=\"安装哪吒客户端-nezha-agent\"><a class=\"anchor\" href=\"#安装哪吒客户端-nezha-agent\">#</a> 安装哪吒客户端 nezha-agent</h2>\n<blockquote>\n<p>安装脚本，根据提示输入对应参数</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -L https://raw.githubusercontent.com/naiba/nezha/master/script/install.sh -o nezha.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">chmod</span> +x nezha.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> ./nezha.sh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 国内源</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">curl</span> -L https://gitee.com/naibahq/nezha/raw/master/script/install.sh -o nezha.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">chmod</span> +x nezha.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token assign-left variable\">CN</span><span class=\"token operator\">=</span>true ./nezha.sh</pre></td></tr></table></figure><h2 id=\"仅ipv6-安装-cloudfared\"><a class=\"anchor\" href=\"#仅ipv6-安装-cloudfared\">#</a> 仅 ipv6 安装 Cloudfared</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> dpkg -i cloudflared.deb</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> cloudflared <span class=\"token function\">service</span> <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>token<span class=\"token operator\">></span></pre></td></tr></table></figure><blockquote>\n<p>ExecStart 增加参数 --edge-ip-version 6    指定 ipv6 only<br />\nvi /etc/systemd/system/cloudflared.service</p>\n</blockquote>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Description=cloudflared</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>After=network<span class=\"token punctuation\">-</span>online.target</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Wants=network<span class=\"token punctuation\">-</span>online.target</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>TimeoutStartSec=0</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Type=notify</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>ExecStart=/usr/bin/cloudflared <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>edge<span class=\"token punctuation\">-</span>ip<span class=\"token punctuation\">-</span>version 6 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>no<span class=\"token punctuation\">-</span>autoupdate tunnel run <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>token &lt;token<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Restart=on<span class=\"token punctuation\">-</span>failure</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>RestartSec=5s</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>WantedBy=multi<span class=\"token punctuation\">-</span>user.target</pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://amber6hua.github.io/coreelec-ipv6/",
            "url": "https://amber6hua.github.io/coreelec-ipv6/",
            "title": "CoreElec开启ipv6",
            "date_published": "2024-08-06T08:30:07.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>CoreELEC 启用 IPV6<br />\nCoreELEC 默认是不开启 IPV6 的，需要手动开启</p>\n<h2 id=\"操作步骤\"><a class=\"anchor\" href=\"#操作步骤\">#</a> 操作步骤</h2>\n<blockquote>\n<p>新建并且编辑 /etc/sysctl.d/ipv6.conf 文件</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /etc/sysctl.d/ipv6.conf</pre></td></tr></table></figure><blockquote>\n<p>编辑上述文件，写入以下内容：</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>net.ipv6.conf.all.disable_ipv6 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>net.ipv6.conf.default.disable_ipv6 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>net.ipv6.conf.eth0.disable_ipv6 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><blockquote>\n<p>保存退出，执行以下命令</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl restart systemd-sysctl</pre></td></tr></table></figure><h2 id=\"增加开机启动\"><a class=\"anchor\" href=\"#增加开机启动\">#</a> 增加开机启动</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /storage/.config/autostart.sh</pre></td></tr></table></figure><blockquote>\n<p>追加内容</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/usr/bin/systemctl restart systemd-sysctl</pre></td></tr></table></figure>",
            "tags": [
                "教程",
                "教程"
            ]
        },
        {
            "id": "https://amber6hua.github.io/onedrive-rclone-remote/",
            "url": "https://amber6hua.github.io/onedrive-rclone-remote/",
            "title": "远程ssh Rclone 如何获取OneDrive token",
            "date_published": "2024-06-19T05:58:11.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<blockquote>\n<p>远程 ssh 连接，在 Linux 非图形化界面，使用 rclone 挂载 onedrive，如何获得 token</p>\n</blockquote>\n<h2 id=\"远程ssh连接\"><a class=\"anchor\" href=\"#远程ssh连接\">#</a> 远程 ssh 连接</h2>\n<blockquote>\n<p>映射 53682 端口<br />\n由于没有图形化界面，onedrive 无法直接通过浏览器验证，需要映射端口到本地，通过本地浏览器验证</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> -L localhost:53682:localhost:53682 <span class=\"token operator\">&lt;</span>username<span class=\"token operator\">></span>@<span class=\"token operator\">&lt;</span>remote_server<span class=\"token operator\">></span></pre></td></tr></table></figure><h2 id=\"安装rclone\"><a class=\"anchor\" href=\"#安装rclone\">#</a> 安装 rclone</h2>\n<p>linux ubuntu</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> rclone</pre></td></tr></table></figure><h2 id=\"配置rclone\"><a class=\"anchor\" href=\"#配置rclone\">#</a> 配置 rclone</h2>\n<ul>\n<li><a href=\"https://amber6hua.github.io/linux/aria2-rclone/#rclone-%E6%8C%82%E8%BD%BDonedrive\">参考链接</a></li>\n</ul>\n<blockquote>\n<p>配置 onedrive, 需要 onedrive 的 client_id 和 client_secret (在 onedrive 的开发者中心申请)<br />\n rclone config，一步步配置，选择 onedrive, 输入 client_id 和 client_secret<br />\nUse web browser to automatically authenticate? 选择 y 使用 web browser 验证<br />\n然后复制并粘贴身份验证 url 到本地的浏览器，<br />\n<span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMTo1MzY4Mi9hdXRoP3N0YXRlPXh4eHh4eHh4eHh4eCVFNSU4OCVCMCVFNiU5QyVBQyVFNSU5QyVCMCVFNiU5QyVCQSVFNSU5OSVBOCVFNCVCOCU4QSVFNyU5QSU4NCVFNiVCNSU4RiVFOCVBNyU4OCVFNSU5OSVBOCVFRiVCQyU4QyVFNSVBRSU4QyVFNiU4OCU5MCVFOSVBQSU4QyVFOCVBRiU4MSVFMyU4MCU4Mg==\">http://127.0.0.1:53682/auth?state=xxxxxxxxxxxx 到本地机器上的浏览器，完成验证。</span></p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rclone config</pre></td></tr></table></figure>",
            "tags": [
                "教程",
                "教程"
            ]
        },
        {
            "id": "https://amber6hua.github.io/docker/docker-tusd/",
            "url": "https://amber6hua.github.io/docker/docker-tusd/",
            "title": "Docker 部署 tusd上传服务器",
            "date_published": "2024-06-18T07:05:17.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3R1cy90dXNk\">tusd</span> 是 tus<br />\n 可恢复上传协议的官方参考实现。该协议指定了一种使用 HTTP 将文件上传到远程服务器的灵活方法。<br />\n其特殊功能是能够随时暂停和恢复上传，从而可以在网络中断等情况下无缝继续。<br />\n它能够接受任意大小的上传，并将其存储在本地磁盘、Google Cloud Storage 或 AWS S3（或任何其他兼容 S3 的存储系统）上。由于其模块化和可扩展性，tusd 可以轻松添加对几乎任何其他云提供商的支持。</p>\n<h2 id=\"doker-部署\"><a class=\"anchor\" href=\"#doker-部署\">#</a> Doker 部署</h2>\n<blockquote>\n<p>创建目录并进入</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> tusd <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> tusd</pre></td></tr></table></figure><blockquote>\n<p>执行 docker 命令 或 复制下面内容到 <span class=\"exturl\" data-url=\"aHR0cDovL3N0YXJ0LnNo\">start.sh</span> 文件，执行 sh <span class=\"exturl\" data-url=\"aHR0cDovL3N0YXJ0LnNo\">start.sh</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly90dXMuZ2l0aHViLmlvL3R1c2QvZ2V0dGluZy1zdGFydGVkL2NvbmZpZ3VyYXRpb24=\">tusd 自定义配置</span> 如: -max-size=209715200 最大上传 200M</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -d --user <span class=\"token number\">0</span>:0 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    --restart<span class=\"token operator\">=</span>always <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    --name<span class=\"token operator\">=</span>tus <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    --privileged<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    -v <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span>/data/:/srv/tusd-data/data/:rw <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    -p <span class=\"token number\">8080</span>:8080 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    tusproject/tusd:latest -max-size<span class=\"token operator\">=</span><span class=\"token number\">209715200</span></pre></td></tr></table></figure><h2 id=\"客户端\"><a class=\"anchor\" href=\"#客户端\">#</a> 客户端</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90dXMuZ2l0aHViLmlvL3R1c2QvZ2V0dGluZy1zdGFydGVkL3VzYWdl\">多种使用方法</span><br />\n例子 tus-js-client</p>\n</blockquote>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> upload <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">tus<span class=\"token punctuation\">.</span>Upload</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// Replace this with tusd's upload creation URL</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  endpoint<span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:8080/files/'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function-variable function\">onError</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Failed because: '</span> <span class=\"token operator\">+</span> error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function-variable function\">onSuccess</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Download %s from %s'</span><span class=\"token punctuation\">,</span> upload<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> upload<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>upload<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"nginx-https-反代\"><a class=\"anchor\" href=\"#nginx-https-反代\">#</a> Nginx https + 反代</h2>\n<blockquote>\n<p>配置参考</p>\n</blockquote>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>server <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        listen 80 default_server;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        listen <span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>80 default_server ipv6only=on;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        listen 443 http2 ssl;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        listen <span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>443 http2 ipv6only=on ssl;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        ssl_certificate         /data/letsencrypt/fullchain.crt;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        ssl_certificate_key     /data/letsencrypt/private.pem;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">#ssl_trusted_certificate /data/letsencrypt/certificate.crt;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\"># Load custom parameters for Diffie Hellman key exchange to avoid the usage</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\"># of common primes</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># ssl_dhparam /etc/nginx/dhparams.pem;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        ssl_session_timeout 1d;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        ssl_session_cache shared<span class=\"token punctuation\">:</span>MozSSL<span class=\"token punctuation\">:</span>10m;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        ssl_session_tickets off;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        ssl_protocols TLSv1.2 TLSv1.3;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        ssl_ciphers ECDHE<span class=\"token punctuation\">-</span>ECDSA<span class=\"token punctuation\">-</span>AES128<span class=\"token punctuation\">-</span>GCM<span class=\"token punctuation\">-</span>SHA256<span class=\"token punctuation\">:</span>ECDHE<span class=\"token punctuation\">-</span>RSA<span class=\"token punctuation\">-</span>AES128<span class=\"token punctuation\">-</span>GCM<span class=\"token punctuation\">-</span>SHA256<span class=\"token punctuation\">:</span>ECDHE<span class=\"token punctuation\">-</span>ECDSA<span class=\"token punctuation\">-</span>AES256<span class=\"token punctuation\">-</span>GCM<span class=\"token punctuation\">-</span>SHA384<span class=\"token punctuation\">:</span>ECDHE<span class=\"token punctuation\">-</span>RSA<span class=\"token punctuation\">-</span>AES256<span class=\"token punctuation\">-</span>GCM<span class=\"token punctuation\">-</span>SHA384<span class=\"token punctuation\">:</span>ECDHE<span class=\"token punctuation\">-</span>ECDSA<span class=\"token punctuation\">-</span>CHACHA20<span class=\"token punctuation\">-</span>POLY1305<span class=\"token punctuation\">:</span>ECDHE<span class=\"token punctuation\">-</span>RSA<span class=\"token punctuation\">-</span>CHACHA20<span class=\"token punctuation\">-</span>POLY1305<span class=\"token punctuation\">:</span>DHE<span class=\"token punctuation\">-</span>RSA<span class=\"token punctuation\">-</span>AES128<span class=\"token punctuation\">-</span>GCM<span class=\"token punctuation\">-</span>SHA256<span class=\"token punctuation\">:</span>DHE<span class=\"token punctuation\">-</span>RSA<span class=\"token punctuation\">-</span>AES256<span class=\"token punctuation\">-</span>GCM<span class=\"token punctuation\">-</span>SHA384;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        ssl_prefer_server_ciphers off;</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\"># 开启 OCSP stapling</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        ssl_stapling on;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        ssl_stapling_verify on;</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        server_name api.bestfreemall.com;</pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        location / <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token comment\"># Forward incoming requests to local tusd instance</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                proxy_pass http<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>8080;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token comment\"># Disable request and response buffering</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                proxy_request_buffering  off;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                proxy_buffering          off;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                proxy_http_version       1.1;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token comment\"># Add X-Forwarded-* headers</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                proxy_set_header X<span class=\"token punctuation\">-</span>Forwarded<span class=\"token punctuation\">-</span>Host $host;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                proxy_set_header X<span class=\"token punctuation\">-</span>Forwarded<span class=\"token punctuation\">-</span>Proto $scheme;</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                proxy_set_header         Upgrade $http_upgrade;</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                proxy_set_header         Connection \"upgrade\";</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                client_max_body_size     0;</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Docker",
                "Docker"
            ]
        },
        {
            "id": "https://amber6hua.github.io/docker/docker-go-build/",
            "url": "https://amber6hua.github.io/docker/docker-go-build/",
            "title": "Docker 简单的Go项目构建示例",
            "date_published": "2024-06-06T03:26:16.000Z",
            "content_html": "<h2 id=\"创建go项目\"><a class=\"anchor\" href=\"#创建go项目\">#</a> 创建 Go 项目</h2>\n<h3 id=\"创建项目目录\"><a class=\"anchor\" href=\"#创建项目目录\">#</a> 创建项目目录</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> -p /go/src/myapp <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> /go/src/myapp</pre></td></tr></table></figure><h3 id=\"创建maingo文件\"><a class=\"anchor\" href=\"#创建maingo文件\">#</a> 创建 main.go 文件</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"编写dockerfile\"><a class=\"anchor\" href=\"#编写dockerfile\">#</a> 编写 Dockerfile</h2>\n<p>创建 Dockerfile 文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /go <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">vi</span> Dockerfile</pre></td></tr></table></figure><p>内容如下：</p>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 使用 Go 1.20 版本和 Alpine Linux 作为基础镜像</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> golang:1.20-alpine</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 设置 Go 环境变量</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">ENV</span> GO111MODULE=on <span class=\"token operator\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    CGO_ENABLED=0 <span class=\"token operator\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    GOROOT=/usr/local/go <span class=\"token operator\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    GOPATH=/go <span class=\"token operator\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    GOBIN=/go/bin <span class=\"token operator\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    PATH=/go/bin:<span class=\"token variable\">$PATH</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 创建 Go 的工作目录</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> mkdir -p <span class=\"token string\">\"$GOPATH/src\"</span> <span class=\"token string\">\"$GOBIN\"</span> &amp;&amp; chmod -R 777 <span class=\"token string\">\"$GOPATH\"</span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 设置容器的工作目录</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">WORKDIR</span> /go</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 可选：安装一些基本工具</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> apk update &amp;&amp; apk upgrade &amp;&amp; <span class=\"token operator\">\\</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    apk add --no-cache git bash curl</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 可选：复制本地 Go 代码到容器内</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># COPY ./src /go/src</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 可选：构建 Go 程序</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># RUN go build -o /go/bin/myapp /go/src/myapp/main.go</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 容器启动时运行的命令</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># 容器启动时运行的命令（应根据实际情况修改）</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 假设构建好的 Go 程序名为 myapp，并且已经通过之前的步骤复制到 /go/bin 目录下</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># CMD [\"/go/bin/myapp\"]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"/bin/sh\"</span>]</span></pre></td></tr></table></figure><h2 id=\"构建镜像\"><a class=\"anchor\" href=\"#构建镜像\">#</a> 构建镜像</h2>\n<p>自定义镜像名称 如 gotest</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker build -t gotest <span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><p>通过 docker images 命令查看镜像是否成功构建</p>\n<h2 id=\"运行容器\"><a class=\"anchor\" href=\"#运行容器\">#</a> 运行容器</h2>\n<p>docker run -d -v /go:/go -it gotest /bin/sh</p>\n<h2 id=\"额外内容\"><a class=\"anchor\" href=\"#额外内容\">#</a> 额外内容</h2>\n<blockquote>\n<p>快速启动一个 golang 容器</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -d -v /go:/go -it golang:1.20-alpine /bin/sh</pre></td></tr></table></figure>",
            "tags": [
                "Docker",
                "Golang",
                "Docker"
            ]
        },
        {
            "id": "https://amber6hua.github.io/docker/nginx-proxy-cloudflare/",
            "url": "https://amber6hua.github.io/docker/nginx-proxy-cloudflare/",
            "title": "Docker部署Nginx反代和cloudflare站点配置",
            "date_published": "2023-12-29T07:51:01.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>记录一下 Docker 部署 Nginx 反代和简单的 nginx 反代配置</p>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubTZ5LmNjL2FyY2hpdmVzLzMwMDIuaHRtbA==\">https://www.m6y.cc/archives/3002.html</span></li>\n</ul>\n<h2 id=\"创建反代的配置文件\"><a class=\"anchor\" href=\"#创建反代的配置文件\">#</a> 创建反代的配置文件</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 随便创建一个目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">mkdir</span> proxy <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> proxy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 创建配置目录</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">mkdir</span> conf.d</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 编辑配置文件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">vi</span> conf.d/default.conf</pre></td></tr></table></figure><blockquote>\n<p>default.conf</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>server <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        listen <span class=\"token number\">80</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        server_name  <span class=\"token number\">127.0</span>.0.1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        client_max_body_size <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        proxy_max_temp_file_size <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        proxy_buffering off<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        proxy_request_buffering off<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        location ^~ /</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                proxy_pass https://node.aapanel.com<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                proxy_set_header X-Real-IP <span class=\"token variable\">$remote_addr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                proxy_set_header X-Forwarded-For <span class=\"token variable\">$proxy_add_x_forwarded_for</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                proxy_set_header REMOTE-HOST <span class=\"token variable\">$remote_addr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                proxy_set_header Upgrade <span class=\"token variable\">$http_upgrade</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                proxy_http_version <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token comment\"># proxy_hide_header Upgrade;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token comment\">#Persistent connection related configuration</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token comment\">#proxy_set_header Host $host;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token comment\">#把 $host 改成目标域名或者直接注释</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                proxy_set_header Host node.aapanel.com<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token comment\">#反代 CF 增加规则</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                proxy_ssl_name node.aapanel.com<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                proxy_ssl_server_name on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"执行nginx-docker容器命令\"><a class=\"anchor\" href=\"#执行nginx-docker容器命令\">#</a> 执行 Nginx Docker 容器命令</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 在 proxy 目录下，可以把部署命令存放到 sh 脚本执行， 也可以直接执行</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker run -d --restart<span class=\"token operator\">=</span>unless-stopped --network <span class=\"token function\">host</span> -v <span class=\"token environment constant\">$PWD</span>/conf.d:/etc/nginx/conf.d --name<span class=\"token operator\">=</span>proxy nginx:mainline-alpine3.18-slim</pre></td></tr></table></figure>",
            "tags": [
                "Docker",
                "教程",
                "Docker"
            ]
        },
        {
            "id": "https://amber6hua.github.io/cloudflare-tunnels/",
            "url": "https://amber6hua.github.io/cloudflare-tunnels/",
            "title": "记录Cloudflare内网穿透的使用",
            "date_published": "2023-12-22T08:27:58.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>突然发现不用绑定信用卡，也能白嫖 Cloudflare 的内网穿透了。<br />\n在此记录下使用过程。</p>\n<h2 id=\"参考连接\"><a class=\"anchor\" href=\"#参考连接\">#</a> 参考连接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20va2VsbGV5LWgvcC8xNzUxNjA1My5odG1s\">https://www.cnblogs.com/kelley-h/p/17516053.html</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82MjAxMzU0ODU=\">https://zhuanlan.zhihu.com/p/620135485</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21hamlheXUwMDAvYXJ0aWNsZS9kZXRhaWxzLzEzMjg1ODAyNg==\">https://blog.csdn.net/majiayu000/article/details/132858026</span></li>\n</ul>\n<h2 id=\"申请免费域名\"><a class=\"anchor\" href=\"#申请免费域名\">#</a> 申请免费域名</h2>\n<blockquote>\n<p>快 2024 年了，好多免费申请域名办法，都无用了<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZW5vbS5jb20v\"> Freenom</span> 停止申请了<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaWMuZXUub3JnL2FyZi9lbi8=\"> eu.org</span> 审核也是遥遥无期<br />\n最后只能去<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnBzb3IuY24vcHJvZHVjdC9kb21haW4tYnV5\">硅云</span> 申请 top 域名，先白嫖个一年再说<br />\n申请过程很顺利，就是嫌麻烦，要绑定还要实名，但是没办法。</p>\n</blockquote>\n<h2 id=\"注册cloudflare\"><a class=\"anchor\" href=\"#注册cloudflare\">#</a> 注册 Cloudflare</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXNoLmNsb3VkZmxhcmUuY29tLw==\">注册 Cloudflare</span>,qq 油箱就能注册</p>\n</blockquote>\n<h2 id=\"绑定个人域名\"><a class=\"anchor\" href=\"#绑定个人域名\">#</a> 绑定个人域名</h2>\n<ul>\n<li>注册成功后登录首页</li>\n<li>从左侧菜单栏，点击 [网站] 项，[添加站点]</li>\n<li>输入前面申请的顶级域名\n<ul>\n<li>选中 Free 免费的计划</li>\n<li>不用 [添加记录]，直接点击继续</li>\n<li>根据提示，进入申请的域名管理界面，复制 cloudfare 提供的 dns 服务器，修改域名 dns</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"如何进入域名管理界面\"><a class=\"anchor\" href=\"#如何进入域名管理界面\">#</a> 如何进入域名管理界面</h3>\n<blockquote>\n<p>如<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnBzb3IuY24vY2VudGVyL3BlcnNvbmFsL215UHJvZHVjdC9kb21haW4=\">硅云</span>申请的域名<br />\n可以在后台管理界面，我的产品 =》域名 =》域名列表，看到申请好的域名。<br />\n最后一列点击 [操作]，直接进入 [域名管理界面]</p>\n</blockquote>\n<h2 id=\"创建web内网穿透\"><a class=\"anchor\" href=\"#创建web内网穿透\">#</a> 创建 web 内网穿透</h2>\n<ul>\n<li>回到首页，看到左侧菜单栏 [Zero Trust], 点击进入</li>\n<li>点击进入 Access =&gt; Tunnels 设置内网穿透的页面</li>\n<li>点击 [Create a tunnel] 按钮，开始添加内网穿透应用\n<ul>\n<li>首先随便取个名字。保存后，提供了各种客户端安装方式。（因为我本身有 docker 环境，直接复制提供的代码，用 docker 安装，很方便）</li>\n<li>Public Hostname 分页，点击 [Add a public hostname] 按钮添加，域名和内网关联。</li>\n</ul>\n</li>\n<li>Subdomain 填写 www 或者其他二级域名。Domain 选择之前添加域名</li>\n<li>单纯的想通过 web 访问内网应用，type 类型选择 http 就行。URL 填 ip: 端口</li>\n<li>这样基本的内网穿透就完成了</li>\n</ul>\n<h2 id=\"进阶-ssh内网穿透\"><a class=\"anchor\" href=\"#进阶-ssh内网穿透\">#</a> 进阶 - ssh 内网穿透</h2>\n<blockquote>\n<p>需要远程访问，type 类型选择 ssh，并不能直接访问，还需要在访问端安装 cloudflared</p>\n</blockquote>\n<h3 id=\"安装cloudflared\"><a class=\"anchor\" href=\"#安装cloudflared\">#</a> 安装 cloudflared</h3>\n<blockquote>\n<p>这里介绍下 linux 下的安装</p>\n</blockquote>\n<div class=\"tab\" data-id=\"id1\" data-title=\"centos amd64架构\">\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -L <span class=\"token string\">'https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64'</span> -o /usr/bin/cloudflared <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">chmod</span> +x /usr/bin/cloudflared</pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Ubuntu\">\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> dpkg -i cloudflared-linux-amd64.deb</pre></td></tr></table></figure></div>\n<h3 id=\"编辑配置文件\"><a class=\"anchor\" href=\"#编辑配置文件\">#</a> 编辑配置文件</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> ~/.ssh/config</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Host ssh.example.com</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ProxyCommand /usr/local/bin/cloudflared access <span class=\"token function\">ssh</span> --hostname %h</pre></td></tr></table></figure><h3 id=\"ssh远程连接\"><a class=\"anchor\" href=\"#ssh远程连接\">#</a> ssh 远程连接</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> <span class=\"token operator\">&lt;</span>username<span class=\"token operator\">></span>@ssh.example.com</pre></td></tr></table></figure>",
            "tags": [
                "Linux",
                "教程",
                "Linux"
            ]
        },
        {
            "id": "https://amber6hua.github.io/fastadmin/fastadmin-doc-14/",
            "url": "https://amber6hua.github.io/fastadmin/fastadmin-doc-14/",
            "title": "FastAdmin 个人记录 - 管理员分组搜索(多对多结构)",
            "date_published": "2023-11-23T07:10:39.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>突然发现 fastadmin 的管理员模块，不能根据分组搜索，原来是对应的分组 id, 并不是在管理员表中，<br />\n而带有中间表的多对多结构，即管理员对应多个分组，分组对应多个管理员。<br />\n以后类似的多对多也可以做参考。</p>\n<h2 id=\"js代码\"><a class=\"anchor\" href=\"#js代码\">#</a> js 代码</h2>\n<ul>\n<li>在字段 groups_text 前加上 {field: 'groupIds', title: __('Group'),visible: false},</li>\n<li>在普通搜索渲染后，添加关于 selectpage 的代码</li>\n</ul>\n<p>修改文件 public/assets/js/backend/auth/admin.js</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> table <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#table\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token comment\">// 在普通搜索渲染后</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            table<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'post-common-search.bs.table'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> table</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token keyword\">var</span> form <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"form\"</span><span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span>$commonsearch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input[name='groupIds']\"</span><span class=\"token punctuation\">,</span> form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selectpage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"source\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"auth/group/index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"primaryKey\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"field\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"orderBy\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"id desc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                Form<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">cxselect</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                Form<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">selectpage</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">// 初始化表格</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            table<span class=\"token punctuation\">.</span><span class=\"token function\">bootstrapTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                url<span class=\"token operator\">:</span> $<span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span>bootstrapTable<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">.</span>index_url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                searchFormVisible<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                columns<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span>field<span class=\"token operator\">:</span> <span class=\"token string\">'state'</span><span class=\"token punctuation\">,</span> checkbox<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span>field<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'ID'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span>field<span class=\"token operator\">:</span> <span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span>field<span class=\"token operator\">:</span> <span class=\"token string\">'nickname'</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Nickname'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span>field<span class=\"token operator\">:</span> <span class=\"token string\">'groupIds'</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Group'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>visible<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span>field<span class=\"token operator\">:</span> <span class=\"token string\">'groups_text'</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Group'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> operate<span class=\"token operator\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> formatter<span class=\"token operator\">:</span> Table<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>formatter<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span>field<span class=\"token operator\">:</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Email'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span>field<span class=\"token operator\">:</span> <span class=\"token string\">'status'</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Status\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> searchList<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"normal\"</span><span class=\"token operator\">:</span><span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Normal'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hidden\"</span><span class=\"token operator\">:</span><span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hidden'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> formatter<span class=\"token operator\">:</span> Table<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>formatter<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                        <span class=\"token punctuation\">&#123;</span>field<span class=\"token operator\">:</span> <span class=\"token string\">'logintime'</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Login time'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> formatter<span class=\"token operator\">:</span> Table<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>formatter<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">,</span> operate<span class=\"token operator\">:</span> <span class=\"token string\">'RANGE'</span><span class=\"token punctuation\">,</span> addclass<span class=\"token operator\">:</span> <span class=\"token string\">'datetimerange'</span><span class=\"token punctuation\">,</span> sortable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"php代码\"><a class=\"anchor\" href=\"#php代码\">#</a> php 代码</h2>\n<ul>\n<li>通过重构 where 搜索，获取的分组 id，再通过分组 id, 获取改分组下的所有管理员 id</li>\n<li>再通过 in 搜索条件获取，该分组下的所有管理员</li>\n</ul>\n<p>修改文件 application/admin/controller/auth/Admin.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 处理 where groupIds begin</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token variable\">$filter</span> <span class=\"token operator\">=</span> <span class=\"token function\">json_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"filter\"</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token variable\">$op</span> <span class=\"token operator\">=</span> <span class=\"token function\">json_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"op\"</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'trim'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token variable\">$where0</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filter</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'groupIds'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token variable\">$where0</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'group_id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$filter</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'groupIds'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filter</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'groupIds'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$op</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'groupIds'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filter'</span><span class=\"token operator\">=></span><span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filter</span><span class=\"token punctuation\">,</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'op'</span><span class=\"token operator\">=></span><span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$op</span><span class=\"token punctuation\">,</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">// 处理 where groupIds end</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$where</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sort</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$order</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$offset</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$limit</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">buildparams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">//$map 搜索条件</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token variable\">$map</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$where0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token comment\">// 获取某个分组下的全部 id</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token variable\">$ids</span> <span class=\"token operator\">=</span> <span class=\"token function\">model</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'AuthGroupAccess'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$where0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'uid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token variable\">$map</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'in'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ids</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token variable\">$list</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">model</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token operator\">-></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$map</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token operator\">-></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$where</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token operator\">-></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'in'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">childrenAdminIds</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token operator\">-></span><span class=\"token function\">field</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'salt'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token operator\">-></span><span class=\"token function\">order</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sort</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$order</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token operator\">-></span><span class=\"token function\">paginate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$limit</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "FastAdmin",
                "教程",
                "FastAdmin"
            ]
        },
        {
            "id": "https://amber6hua.github.io/docker/coreelec-docker-macvlan/",
            "url": "https://amber6hua.github.io/docker/coreelec-docker-macvlan/",
            "title": "CoreElec环境 Docker Macvlan 宿主机与容器不能互通",
            "date_published": "2023-09-19T02:38:55.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>N1 盒子刷了 CoreElec，并且安装了 docker, 可玩性更高了。<br />\ndocker 安装了 openwrt, 由于 macvaln 为了安全而禁止宿主机与容器互通。<br />\n用网上常见的方法，创建虚拟网卡，并加入路由，结果还是无法访问。<br />\n很奇怪，之前在虚拟机试过可以正常互通的。</p>\n<p>最后终于在恩山找到了这篇文章</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmlnaHQuY29tLmNuL2ZvcnVtL2ZvcnVtLnBocD9tb2Q9dmlld3RocmVhZCZhbXA7dGlkPTEyNTMyNTkmYW1wO3BhZ2U9MSNwaWQ1MDc3NTUz\">https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=1253259&amp;page=1#pid5077553</span></li>\n</ul>\n<p>原文：</p>\n<blockquote>\n<p>最近装了 coreElec 跑 docker + op，发现容器和宿主机不能互通，找了一圈没找到解决方法。本来想试下通过 veth pair 来解决，但发现自带的 ip 命令是 busybox 的而且不支持 ip netns 这个命令，<br />\n于是逛下帖子，无意中看到了 coreElec 可以装 entware 然后就装了个玩下，本来想用来装个 iproute2 的，opkg 安装提示没这包，看到了有 ip-full 然后就安装试下了，然后 ip --help 一下，看到有 ip netns 这个玩意了</p>\n</blockquote>\n<div class=\"note info\">\n<p>导致 coreElec 下 docker 容器与宿主机之间不能互 Ping 的原因应该是系统自带的 busybox 里面的 ip 命令功能不全？</p>\n</div>\n<h2 id=\"coreelec-安装entware\"><a class=\"anchor\" href=\"#coreelec-安装entware\">#</a> CoreElec 安装 entware</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>installentware</pre></td></tr></table></figure><p>常用命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>opkg update    <span class=\"token comment\">#更新可以获取的软件包列表</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>opkg upgrade    <span class=\"token comment\">#对已经安装的软件包升级</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>opkg list    <span class=\"token comment\">#获取软件列表</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>opkg <span class=\"token function\">install</span>    <span class=\"token comment\">#安装指定的软件包</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>opkg remove    <span class=\"token comment\">#卸载已经安装的指定的软件包</span></pre></td></tr></table></figure><h2 id=\"安装-ip-full\"><a class=\"anchor\" href=\"#安装-ip-full\">#</a> 安装 ip-full</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>opkg <span class=\"token function\">install</span> ip-full</pre></td></tr></table></figure><h2 id=\"创建虚拟网卡并加入路由\"><a class=\"anchor\" href=\"#创建虚拟网卡并加入路由\">#</a> 创建虚拟网卡并加入路由</h2>\n<p>192.168.1.0/24 是网段，按照个人实际情况修改<br />\n 192.168.1.20 是 openwrt 容器的 ip</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#开启物理网卡的混杂模式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ifconfig</span> eth0 promisc</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 创建虚拟网卡</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 不知道为什么，创建完虚拟网卡后，系统会自动分配 ip 并启用，很难受每次重启，网卡的 ip 都会变，不过没啥影响</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token function\">add</span> macvlan <span class=\"token function\">link</span> eth0 <span class=\"token builtin class-name\">type</span> macvlan mode bridge</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 给虚拟网卡分配 ip 并启用 (可以通过 ifconfig 查看，如果自动分配了，可以忽略这个步骤)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">ip</span> addr <span class=\"token function\">add</span> <span class=\"token number\">192.168</span>.1.100/24 dev macvlan </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> macvlan up</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">ip</span> route del <span class=\"token number\">192.168</span>.1.0/24 dev eth0</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">ip</span> route del default</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 把 openwrt 容器的 ip 加入 route 到虚拟网卡 (很关键)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">ip</span> route <span class=\"token function\">add</span> <span class=\"token number\">192.168</span>.1.0/24 dev macvlan</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">ip</span> route <span class=\"token function\">add</span> default via <span class=\"token number\">192.168</span>.1.20 dev macvlan</pre></td></tr></table></figure><p>完成这些，宿主机和容器就能互通</p>\n<h2 id=\"加入开机启动脚本\"><a class=\"anchor\" href=\"#加入开机启动脚本\">#</a> 加入开机启动脚本</h2>\n<p>由于重启后，这些配置会消失，可以加入开机启动脚本</p>\n<p>vi ~/.config/autostart.sh</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ifconfig</span> eth0 promisc</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/opt/sbin/ip <span class=\"token function\">link</span> <span class=\"token function\">add</span> macvlan <span class=\"token function\">link</span> eth0 <span class=\"token builtin class-name\">type</span> macvlan mode bridge</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>/opt/sbin/ip <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> macvlan up</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>/opt/sbin/ip route del <span class=\"token number\">192.168</span>.1.0/24 dev eth0</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>/opt/sbin/ip route del default</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>/opt/sbin/ip route <span class=\"token function\">add</span> <span class=\"token number\">192.168</span>.1.0/24 dev macvlan</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>/opt/sbin/ip route <span class=\"token function\">add</span> default via <span class=\"token number\">192.168</span>.1.20 dev macvlan</pre></td></tr></table></figure><p>然后按 esc 键 输入 :wq 保存文件</p>\n<p>修改权限后</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">chmod</span> a+x ~/.config/autostart.sh</pre></td></tr></table></figure><h2 id=\"大佬的脚本\"><a class=\"anchor\" href=\"#大佬的脚本\">#</a> 大佬的脚本</h2>\n<blockquote>\n<p>之前完全按照大佬的脚本，试了下，可以互通。<br />\n但是原本的 eth0 ip 被清空了，ssh 访问 Coreelec 走的虚拟网卡。</p>\n</blockquote>\n<blockquote>\n<p>ip addr flush dev eth0 // 清空指定网卡 ip<br />\n 最后两行是用来固定虚拟网卡的 ip、网关、dns。<br />\n这里的网关地址 表示 openwrt 的 ip</p>\n</blockquote>\n<div class=\"note info\">\n<p>大致意思是宿主机走虚拟网卡，并且可以把 openwrt 的 ip, 指定为虚拟网卡的网关，让 n1 走 docker openwrt 旁路由。<br />\n没有深入研究，其中 DNS 地址之前试了用 192.168.1.1 默认网关，好像无法访问外网。<br />\n有需要可以多测试下，试试 114.114.114.114。</p>\n</div>\n<p>vi ~/.config/autostart.sh</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ifconfig</span> eth0 promisc <span class=\"token comment\">#开启混杂模式</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/opt/sbin/ip addr flush dev eth0 <span class=\"token comment\">#清空指定网卡 ip</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>/opt/sbin/ip <span class=\"token function\">link</span> <span class=\"token function\">add</span> macvlan <span class=\"token function\">link</span> eth0 <span class=\"token builtin class-name\">type</span> macvlan mode bridge <span class=\"token comment\">#创建虚拟网卡</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>/opt/sbin/ip <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> macvlan up <span class=\"token comment\">#启用网卡</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>/opt/sbin/ip route del <span class=\"token number\">192.168</span>.1.0/24 dev eth0 <span class=\"token comment\">#删除指定网卡的指定网段路由</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>/opt/sbin/ip route del default <span class=\"token comment\">#删除默认路由</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>/opt/sbin/ip route <span class=\"token function\">add</span> <span class=\"token number\">192.168</span>.1.0/24 dev macvlan <span class=\"token comment\">#指定网段路由加入到指定接口</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>/opt/sbin/ip route <span class=\"token function\">add</span> default via 网关地址 dev macvlan <span class=\"token comment\">#增加默认网关</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>connmanctl services <span class=\"token operator\">|</span><span class=\"token function\">grep</span> -vi <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ifconfig</span> eth0<span class=\"token operator\">|</span><span class=\"token function\">grep</span> HW<span class=\"token operator\">|</span><span class=\"token function\">awk</span> -F: <span class=\"token string\">'&#123;print $7&#125;'</span><span class=\"token variable\">)</span></span><span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;system(\"connmanctl config \"$3\" --ipv4 manual IP地址 255.255.255.0 网关地址\")&#125;'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>connmanctl services <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> eth<span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;system(\"connmanctl config \"$3\" --nameservers DNS地址\")&#125;'</span></pre></td></tr></table></figure><h2 id=\"我的-ip-addr-结果\"><a class=\"anchor\" href=\"#我的-ip-addr-结果\">#</a> 我的 ip addr 结果</h2>\n<blockquote>\n<p>我选择保留物理网卡 ip，虚拟网卡作为中转，烦人的就是每次重启虚拟网卡的 ip 会改变（可能是因为 eth0 是动态获取的 ip）<br />\n也可以根据大佬的脚本，直接走虚拟网卡。<br />\n看个人喜好。</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">2</span>: eth0: <span class=\"token operator\">&lt;</span>BROADCAST,MULTICAST,PROMISC,DYNAMIC,UP,LOWER_UP<span class=\"token operator\">></span> mtu <span class=\"token number\">1500</span> qdisc fq_codel state UP group default qlen <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    link/ether mac地址 brd ff:ff:ff:ff:ff:ff</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    inet <span class=\"token number\">192.168</span>.1.20/24 brd <span class=\"token number\">192.168</span>.1.255 scope global eth0</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       valid_lft forever preferred_lft forever</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">4</span>: macvlan@eth0: <span class=\"token operator\">&lt;</span>BROADCAST,MULTICAST,DYNAMIC,UP,LOWER_UP<span class=\"token operator\">></span> mtu <span class=\"token number\">1500</span> qdisc noqueue state UP group default qlen <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    link/ether mac地址 brd ff:ff:ff:ff:ff:ff</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    inet <span class=\"token number\">192.168</span>.1.100/24 brd <span class=\"token number\">192.168</span>.1.255 scope global macvlan</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       valid_lft forever preferred_lft forever</pre></td></tr></table></figure><h2 id=\"额外\"><a class=\"anchor\" href=\"#额外\">#</a> 额外</h2>\n<h3 id=\"coreelec可用docker-插件\"><a class=\"anchor\" href=\"#coreelec可用docker-插件\">#</a> CoreElec 可用 docker 插件</h3>\n<p>由于无法访问插件库，在网上找了个可用的 docker 插件，离线安装</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtYmVyNmh1YS9jZG4vdHJlZS9tYXN0ZXIvbjEvc2VydmljZS5zeXN0ZW0uZG9ja2VyLTE5LjUuMTM0LnppcA==\">https://github.com/amber6hua/cdn/tree/master/n1/service.system.docker-19.5.134.zip</span></p>\n<p>下载后上传到 CoreElec, 进入【插件】，然后选择【从 zip 文件安装】</p>\n<p>安装 docker-compose</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 下载 docker-compose 到 /storage/.opt/sbin 目录，相当于 linux 的 /usr/bin 目录，可以全局访问 docker-compose</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">curl</span> -L <span class=\"token string\">\"https://ghproxy.com/https://github.com/docker/compose/releases/latest/download/docker-compose-<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> -s<span class=\"token variable\">)</span></span>-<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">)</span></span>\"</span> -o /storage/.opt/sbin/docker-compose</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 添加执行权限</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">chmod</span> +x /storage/.opt/sbin/docker-compose</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 检查是否安装成功</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>docker-compose --version</pre></td></tr></table></figure><h3 id=\"利用以下命令可以直观的发生了什么\"><a class=\"anchor\" href=\"#利用以下命令可以直观的发生了什么\">#</a> 利用以下命令可以直观的发生了什么</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>route -n </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ip</span> route show</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">ip</span> addr</pre></td></tr></table></figure><h2 id=\"我的环境出现的问题\"><a class=\"anchor\" href=\"#我的环境出现的问题\">#</a> 我的环境出现的问题</h2>\n<p>vi ~/.config/autostart.sh</p>\n<blockquote>\n<p>完全按照上面的开机脚本使用过程中，发现一些问题</p>\n</blockquote>\n<h3 id=\"不能访问外网\"><a class=\"anchor\" href=\"#不能访问外网\">#</a> 不能访问外网</h3>\n<blockquote>\n<p>我注释第二行和最后一行后，可以正常访问外网了</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ifconfig</span> eth0 promisc</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#/opt/sbin/ip addr flush dev eth0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>/opt/sbin/ip <span class=\"token function\">link</span> <span class=\"token function\">add</span> macvlan <span class=\"token function\">link</span> eth0 <span class=\"token builtin class-name\">type</span> macvlan mode bridge</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>/opt/sbin/ip <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> macvlan up</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>/opt/sbin/ip route del <span class=\"token number\">192.168</span>.3.0/24 dev eth0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>/opt/sbin/ip route del default</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>/opt/sbin/ip route <span class=\"token function\">add</span> <span class=\"token number\">192.168</span>.3.0/24 dev macvlan</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>/opt/sbin/ip route <span class=\"token function\">add</span> default via <span class=\"token number\">192.168</span>.3.14 dev macvlan</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>connmanctl services <span class=\"token operator\">|</span><span class=\"token function\">grep</span> -vi <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ifconfig</span> eth0<span class=\"token operator\">|</span><span class=\"token function\">grep</span> HW<span class=\"token operator\">|</span><span class=\"token function\">awk</span> -F: <span class=\"token string\">'&#123;print $7&#125;'</span><span class=\"token variable\">)</span></span><span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;system(\"connmanctl config \"$3\" --ipv4 manual 192.168.3.20 255.255.255.0 192.168.3.1\")&#125;'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#connmanctl services | grep eth|awk '&#123;system(\"connmanctl config \"$3\" --nameservers 114.114.114.114\")&#125;'</span></pre></td></tr></table></figure><h3 id=\"运行一段时间路由冲突\"><a class=\"anchor\" href=\"#运行一段时间路由冲突\">#</a> 运行一段时间路由冲突</h3>\n<blockquote>\n<p>不晓得为什么运行一段时间后，会自动生成一个路由规则，造成冲突<br />\n为此增加了一个定时任务，定时删除路由</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">crontab</span> -e</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#定时任务 每天执行一次删除路由</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">0</span> <span class=\"token number\">2</span> * * * /opt/sbin/ip route del <span class=\"token number\">192.168</span>.3.0/24 dev eth0</pre></td></tr></table></figure>",
            "tags": [
                "Docker",
                "教程",
                "Linux",
                "Docker"
            ]
        },
        {
            "id": "https://amber6hua.github.io/linux/autobangumi/",
            "url": "https://amber6hua.github.io/linux/autobangumi/",
            "title": "部署 AutoBangumi 自动追番工具",
            "date_published": "2023-09-11T09:11:39.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0VzdHJlbGxhWEQvQXV0b19CYW5ndW1p\">AutoBangumi 自动追番工具</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2plcnJ5bWFrZXNqZWxseS9hdXRvcmVtb3ZlLXRvcnJlbnRz\">autoremove-torrents 自动删种程序</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9taWthbmFuaS5tZQ==\">蜜柑计划</span></li>\n</ul>\n<p>在自己的私人服务器上，搭建<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0VzdHJlbGxhWEQvQXV0b19CYW5ndW1p\"> AutoBangumi 自动追番工具</span><br />\n可以追番或订阅某一部番剧</p>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGltaWt1LmNvbS9hcmNoaXZlcy9hdXRvLWJhbmd1bWkuaHRtbA==\">https://www.himiku.com/archives/auto-bangumi.html</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcm9zc2JlbGwuaW8vbm90ZXMvNTExMjQtMzQ=\">https://crossbell.io/notes/51124-34</span></li>\n</ul>\n<h2 id=\"docker-autobangumi\"><a class=\"anchor\" href=\"#docker-autobangumi\">#</a> Docker AutoBangumi</h2>\n<p>项目文档 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXV0b2Jhbmd1bWkub3JnL2RlcGxveS9kb2NrZXItY29tcG9zZS5odG1s\">https://www.autobangumi.org/deploy/docker-compose.html</span></p>\n<h3 id=\"通过docker-composeyml-安装-qbittorrent-与-autobangumi\"><a class=\"anchor\" href=\"#通过docker-composeyml-安装-qbittorrent-与-autobangumi\">#</a> 通过 docker-compose.yml 安装 qBittorrent 与 AutoBangumi</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> autoBangumi <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> autoBangumi</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">wget</span> https://raw.githubusercontent.com/EstrellaXD/Auto_Bangumi/main/docs/docker-compose/qBittorrent+AutoBangumi/docker-compose.yml</pre></td></tr></table></figure><h3 id=\"定义变量\"><a class=\"anchor\" href=\"#定义变量\">#</a> 定义变量</h3>\n<p>在 docker-compose.yml 统计目录下，创建 .env 文件</p>\n<p>vi .env</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DOWNLOAD_PATH=./downloads</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>QB_PORT=8080</pre></td></tr></table></figure><h3 id=\"启动\"><a class=\"anchor\" href=\"#启动\">#</a> 启动</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker-compose up -d</pre></td></tr></table></figure><h3 id=\"登录\"><a class=\"anchor\" href=\"#登录\">#</a> 登录</h3>\n<p>autoBangumi 后台 http://&lt;ip&gt;:7892  默认账密 admin  adminadmin<br />\nqBittorrent 后台 http://&lt;ip&gt;:8080  默认账密 admin  adminadmin</p>\n<h2 id=\"autoremove-torrents\"><a class=\"anchor\" href=\"#autoremove-torrents\">#</a> autoremove-torrents</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2plcnJ5bWFrZXNqZWxseS9hdXRvcmVtb3ZlLXRvcnJlbnRz\">autoremove-torrents 自动删种程序</span></p>\n<h3 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h3>\n<p>从 pip 安装</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> autoremove-torrents</pre></td></tr></table></figure><p>或者</p>\n<p>从 GitHub 安装</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/jerrymakesjelly/autoremove-torrents.git</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> autoremove-torrents</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>python3 setup.py <span class=\"token function\">install</span></pre></td></tr></table></figure><h3 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hdXRvcmVtb3ZlLXRvcnJlbnRzLnJlYWR0aGVkb2NzLmlvL3poX0NOL2xhdGVzdC9jb25maWcuaHRtbCNwYXJ0LTMtc3RyYXRlZ3ktYmxvY2s=\">策略配置</span></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> autoremove <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> autoremove</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">vim</span> ./config.yml</pre></td></tr></table></figure><p>例子</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">my_task</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">client</span><span class=\"token punctuation\">:</span> qbittorrent</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//127.0.0.1<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> admin</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> adminadmin</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">strategies</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">my_strategy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> Bangumi</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">remove</span><span class=\"token punctuation\">:</span> seeding_time <span class=\"token punctuation\">></span> 1209600 or ratio <span class=\"token punctuation\">></span> 1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">delete_data</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><p>配置说明<br />\n host: qbittorrent 的服务， 8080 是上面自定义的端口号<br />\n categories: qbittorrent 下载时的分类，如 Bangumi<br />\nseeding_time 最长做种时间<br />\n ratio 分享率</p>\n<h3 id=\"运行\"><a class=\"anchor\" href=\"#运行\">#</a> 运行</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 如果你只是想看看哪些种子会被删除但并不想真的就删除它们，请使用 --view 命令行参数（autoremove-torrents --view）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>autoremove-torrents</pre></td></tr></table></figure><h3 id=\"设置计划任务\"><a class=\"anchor\" href=\"#设置计划任务\">#</a> 设置计划任务</h3>\n<p>如果你想每 15 分钟检查一次哪些种子可以被删除，Linux 的 crontab 程序可以帮你。首先:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">crontab</span> -e</pre></td></tr></table></figure><p>然后，在文件的最后加一行（请先确认 autoremove-torrents 在你系统中的路径）:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># --conf 参数指示了配置文件的路径。 --log 参数指定了存储日志文件的路径（必须存在）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>*/15 * * * * /usr/bin/autoremove-torrents --conf<span class=\"token operator\">=</span>/home/autoremove/config.yml --log<span class=\"token operator\">=</span>/home/autoremove/logs</pre></td></tr></table></figure><h2 id=\"踩坑\"><a class=\"anchor\" href=\"#踩坑\">#</a> 踩坑</h2>\n<p>无法删除做种资源<br />\n autoremovetorrents.task ERROR: The torrent .mp4 and its data cannot be removed. Reason: The server responses HTTP 405</p>\n<p>qbittorrent 的版本太高，和 autoremove-torrents 不适配<br />\n可以降低 qbittorrent 版本 如 4.4.5_v2.0.8</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> bangumi</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 先停止并删除之前的 qbittorrent 容器</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>docker-compose stop <span class=\"token operator\">&amp;&amp;</span> docker <span class=\"token function\">rm</span> qBittorrent</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#再修改 docker-compose.yml</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">vi</span> docker-compose.yml</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 重启启动</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>docker-compose up -d</pre></td></tr></table></figure><p>docker-compose.yml</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.2\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">qbittorrent</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> qBittorrent</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">-</span> TZ=Asia/Shanghai</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> TemPath=/downloads</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">-</span> SavePath=/downloads</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">-</span> PGID=$<span class=\"token punctuation\">&#123;</span>GID<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">-</span> PUID=$<span class=\"token punctuation\">&#123;</span>UID<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> WEBUI_PORT=$<span class=\"token punctuation\">&#123;</span>QB_PORT<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">-</span> qb_config<span class=\"token punctuation\">:</span>/config</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">&#123;</span>DOWNLOAD_PATH<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">:</span>/downloads <span class=\"token comment\"># 填入下载绝对路径</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">-</span> $<span class=\"token punctuation\">&#123;</span>QB_PORT<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">&#123;</span>QB_PORT<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"6881:6881\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"6881:6881/udp\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">-</span> auto_bangumi</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> unless<span class=\"token punctuation\">-</span>stopped</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> superng6/qbittorrent<span class=\"token punctuation\">:</span>4.4.5_v2.0.8</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token key atrule\">auto_bangumi</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> AutoBangumi</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token punctuation\">-</span> TZ=Asia/Shanghai</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">-</span> PGID=$<span class=\"token punctuation\">&#123;</span>GID<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">-</span> PUID=$<span class=\"token punctuation\">&#123;</span>UID<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">-</span> AB_DOWNLOADER_HOST=qbittorrent<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">&#123;</span>QB_PORT<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">-</span> ./config<span class=\"token punctuation\">:</span>/app/config</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token punctuation\">-</span> ./data<span class=\"token punctuation\">:</span>/app/data</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token punctuation\">-</span> auto_bangumi</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'7892:7892'</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token key atrule\">dns</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token punctuation\">-</span> 8.8.8.8</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token punctuation\">-</span> 223.5.5.5</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> unless<span class=\"token punctuation\">-</span>stopped</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> estrellaxd/auto_bangumi<span class=\"token punctuation\">:</span>latest</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token punctuation\">-</span> qbittorrent</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token key atrule\">auto_bangumi</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token key atrule\">qb_config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr></table></figure>",
            "tags": [
                "Linux",
                "教程",
                "Linux"
            ]
        },
        {
            "id": "https://amber6hua.github.io/n1-coreelec/",
            "url": "https://amber6hua.github.io/n1-coreelec/",
            "title": "N1 从网心云到CoreElec",
            "date_published": "2023-09-07T01:12:12.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>一直想整个 N1 玩一下，终于在某鱼花了 98 入手了，在等待的到货的过程中，在百度、恩山看了几天的文章教程。<br />\n在众多大神的固件中纠结徘徊，一开始想刷 Armbian, 然后有想刷小钢炮，最后决定刷 CoreElec。</p>\n<p>卖家之前装的是网心云，需要利用拆机短接救砖的方法，刷回官方镜像。比如 v2.19 固件（小于 22 不需要降级）<br />\n开启 ADB 调试，连接上显示器和鼠标，用鼠标点击斐讯 N1 官方固件的那个版本号 3 4 次，出现 【ADB 调试开启】的字样即可</p>\n<h2 id=\"准备工具\"><a class=\"anchor\" href=\"#准备工具\">#</a> 准备工具</h2>\n<ul>\n<li>U 盘或 SD 卡 + 读卡器（听说闪迪的好，正好我就是。读卡器是随便买的杂牌，我都有）</li>\n<li>双公 USB 线</li>\n<li>微型螺丝刀（那种很小很细的双头螺丝刀）</li>\n<li>网线</li>\n<li>HDMI 线</li>\n<li>支持 HDMI 的电视或者显示器</li>\n<li>USB 接口鼠标</li>\n<li>电脑 (win7 win10 win11, 系统越老应该越稳定)</li>\n<li>能导电的小物件（我拆了坏的耳机的线控，找到了一块小铁片，前面试了几个东西，短接都不成功）</li>\n<li>软件\n<ul>\n<li>Win32DiskImager (制作 u 盘启动)</li>\n<li>晶晨线刷工具 Amlogic USB_Burning_Tool</li>\n<li>SSH 工具 (PuTTY、SecureCRT 等)</li>\n<li>N1 进线刷工具包文件</li>\n<li>N1U 盘启动脚本</li>\n</ul>\n</li>\n<li>固件镜像\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0RhbWVubHkvY29yZWVsZWMvcmVsZWFzZXMv\">CoreELEC 20.1 for Phicomm N1</span> 感谢 Damenly，什么新我用什么</li>\n<li>szkifen 大的斐讯 N1 专用 EMUELEC3.1 官方纯净版 (链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTIzNnNjQkJYaTdzVk1jX2NtQVdrdlE=\">https://pan.baidu.com/s/1236scBBXi7sVMc_cmAWkvQ</span> 提取码：n950)</li>\n<li>v2.19 官方固件</li>\n<li>其他安卓固件，如 W 大固件 (可选)</li>\n</ul>\n</li>\n<li>reboot_update.apk (安装到安卓固件里的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMUo2NUx4b3V3ZWczdmY5STlISC0wLWc=\">https://pan.baidu.com/s/1J65Lxouweg3vf9I9HH-0-g</span> 提取码: i7mf)</li>\n</ul>\n<h3 id=\"工具箱链接\"><a class=\"anchor\" href=\"#工具箱链接\">#</a> 工具箱链接</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9maWxlLnpodXltLmNvbS8/ZGlyPS9OMQ==\">https://file.zhuym.com/?dir=/N1</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb20ubmFub2RtLm5ldC9OMS8=\">https://rom.nanodm.net/N1/</span></li>\n</ul>\n<h2 id=\"拆机短接救砖包括网心云等非安卓系统无法通过usb启动的同样可以\"><a class=\"anchor\" href=\"#拆机短接救砖包括网心云等非安卓系统无法通过usb启动的同样可以\">#</a> 拆机短接救砖 (包括网心云等非安卓系统，无法通过 USB 启动的同样可以)</h2>\n<p>参考链接</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTlKNDExYzdaZg==\">https://www.bilibili.com/video/BV19J411c7Zf</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmlnaHQuY29tLmNuL2ZvcnVtL3RocmVhZC02MjE4NTk0LTEtMS5odG1s\">https://www.right.com.cn/forum/thread-6218594-1-1.html</span></li>\n</ul>\n<h3 id=\"拆机\"><a class=\"anchor\" href=\"#拆机\">#</a> 拆机</h3>\n<p>撕开底部 4 处垫脚，露出螺丝孔，用之前准备的微型螺丝刀，卸下螺丝。最后找东西，大胆的撬开底盖。露出主板。找到需要短接的两个点。</p>\n<h3 id=\"晶晨线刷工具-amlogic-usb_burning_tool\"><a class=\"anchor\" href=\"#晶晨线刷工具-amlogic-usb_burning_tool\">#</a> 晶晨线刷工具 Amlogic USB_Burning_Tool</h3>\n<ol>\n<li>安装 USB_Burning_Tool</li>\n<li>导入镜像包</li>\n</ol>\n<h3 id=\"短接救砖\"><a class=\"anchor\" href=\"#短接救砖\">#</a> 短接救砖</h3>\n<ol>\n<li>先用双公头，一端连接 N1 盒子，靠近 HDMI 口的 USB 接口。另一端连接电脑 USB（台式机最好接后面，不过我用的是笔记本，还是 WIN11 的系统）</li>\n<li>准备好电源，先不接入 N1 盒子。</li>\n<li>用能导电的小物件，短接两个点，然后接入电源。</li>\n<li>成功的话，会读取到设备，否则可能是介质不导电，或者短接不成功，多试几次，</li>\n</ol>\n<h3 id=\"刷入官方固件\"><a class=\"anchor\" href=\"#刷入官方固件\">#</a> 刷入官方固件</h3>\n<ul>\n<li>具体步骤还是看<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTlKNDExYzdaZg==\">韩风大佬的救砖视频</span>，刷入官方固件，到此救砖成功</li>\n<li>之后为了刷其他镜像，需要开启 ADB 调试 (连接上显示器和鼠标，用鼠标点击斐讯 N1 官方固件的那个版本号 3 4 次，出现 【ADB 调试开启】的字样即可)</li>\n</ul>\n<h3 id=\"刷入安卓固件\"><a class=\"anchor\" href=\"#刷入安卓固件\">#</a> 刷入安卓固件</h3>\n<blockquote>\n<p>还是韩风大佬的视频 4 大固件任意刷 （根据需要刷其他安卓固件，我选的是 W 大的固件）</p>\n</blockquote>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW1KNDExZzdmUw==\">https://www.bilibili.com/video/BV1mJ411g7fS</span></li>\n</ul>\n<h2 id=\"安装coreelec\"><a class=\"anchor\" href=\"#安装coreelec\">#</a> 安装 CoreElec</h2>\n<p>成功进入大佬的安卓固件，通过 N1 U 盘启动脚本，进入 CoreElec。<br />\n但是画面一直卡在 905d 的 logo 界面，或者 Recovery 界面，换了几种版本，仍然不行。<br />\n在安卓固件中安装 reboot_update.apk 也不行。<br />\n最后发现使用刷入 emuelec 3.1 镜像的成功 U 盘启动了。<br />\n之后再换 CoreElec 镜像的 U 盘能正常启动了。<br />\n这里总结下过程。</p>\n<p>参考链接</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmlnaHQuY29tLmNuL2ZvcnVtL3RocmVhZC00MTMwNTQ3LTEtMS5odG1s\">https://www.right.com.cn/forum/thread-4130547-1-1.html</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuem5kcy5jb20vZm9ydW0ucGhwP21vZD12aWV3dGhyZWFkJmFtcDt0aWQ9MTE4OTI2MyZhbXA7cGFnZT0x\">https://www.znds.com/forum.php?mod=viewthread&amp;tid=1189263&amp;page=1</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmlnaHQuY29tLmNuL0ZPUlVNL2ZvcnVtLnBocD9tb2Q9dmlld3RocmVhZCZhbXA7dGlkPTQxMTM0OTU=\">https://www.right.com.cn/FORUM/forum.php?mod=viewthread&amp;tid=4113495</span></li>\n</ul>\n<h3 id=\"划重点\"><a class=\"anchor\" href=\"#划重点\">#</a> 划重点</h3>\n<p>优盘启动每次都进安卓恢复界面，小机器人倒地，启动不了，据说可能是挑盘，n1 插 u 盘进不去系统，机器人倒地<br />\n可以先刷 emuelec 进 u 盘，插 n1 启动后，再刷 coreelec 进 u 盘，<br />\nn1 就能正确引导进 coreelec，只要能进一次优盘系统，以后就都能优盘启动了， 而且不挑盘。<br />\n具体原因，可能是缺少 aml_autoscript 这个文件</p>\n<h3 id=\"进入安卓系统\"><a class=\"anchor\" href=\"#进入安卓系统\">#</a> 进入安卓系统</h3>\n<ol>\n<li>用 HDMI 连接显示器，直接的看到系统界面</li>\n<li>连接 WiFi 或者直接网线连接，获取 ip, 后面 N1 U 盘启动脚本，要用到。</li>\n<li>安装 reboot_update.apk (看一些教程说会卡 logo, 之前没有刷机经验，就直接安装了，所以不清楚有没有效果，后来人可以先不装)</li>\n</ol>\n<h3 id=\"制作emuelec-31-u盘启动\"><a class=\"anchor\" href=\"#制作emuelec-31-u盘启动\">#</a> 制作 emuelec 3.1 U 盘启动</h3>\n<ol>\n<li>格式化 U 盘</li>\n<li>打开 Win32DiskImager</li>\n<li>选择要刷入的镜像，如 emuelec 3.1</li>\n<li>选择 U 盘</li>\n<li>写入</li>\n<li>成功后，点击 OK，弹出 U 盘。(因为 U 盘变成了启动盘，系统提示 U 盘有问题，不用管直接关掉)</li>\n</ol>\n<h3 id=\"n1-u盘启动-emuelec\"><a class=\"anchor\" href=\"#n1-u盘启动-emuelec\">#</a> N1 U 盘启动 emuelec</h3>\n<ol>\n<li>制作好的 U 盘，插入靠近 HDMI 口的 USB 接口。</li>\n<li>另一个 USB 接口，插入双公 USB 线，并且和电脑相连供电。(供不供电都可以自己尝试下，因为我就用了各种镜像，各种方式试过)</li>\n<li>通过 N1 U 盘启动脚本，点击 U 盘启动.bat, 根据提示输入 N1 的 ip，回车确认，开始重启。(这步很关键，因为连接了显示器，可以看到画面一直卡在 905d 的 logo 界面，或者 Recovery 界面。)</li>\n<li>成功进入 emuelec 系统。(第一次进入系统都要花点时间初始化)</li>\n<li>初始化之后断电，去掉 U 盘，去掉供电。再接电重启 N1 盒子待用。</li>\n</ol>\n<h3 id=\"制作coreelec-u盘启动盘\"><a class=\"anchor\" href=\"#制作coreelec-u盘启动盘\">#</a> 制作 CoreElec U 盘启动盘</h3>\n<p>重复 制作 emuelec 3.1 U 盘启动 的步骤，当然镜像换成 CoreElec 的，我直接用目前最新的镜像<br />\n Damenly 的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0RhbWVubHkvY29yZWVsZWMvcmVsZWFzZXMv\">CoreELEC 20.1 for Phicomm N1</span></p>\n<h3 id=\"n1-u盘启动-coreelec-201\"><a class=\"anchor\" href=\"#n1-u盘启动-coreelec-201\">#</a> N1 U 盘启动 CoreElec 20.1</h3>\n<ol>\n<li>因为之前成功进入 emuelec，启动其他 U 盘系统就简单多了</li>\n<li>插上 CoreElec 的启动盘，依然是靠近 HDMI 口的 USB 接口，不用插供电</li>\n<li>通过 N1 U 盘启动脚本，重启。</li>\n<li>这次启动 CoreElec 就没有卡 Logo 了，成功进入系统。</li>\n<li>根据提示设置，记得开启 ssh 和 smb</li>\n</ol>\n<h3 id=\"写入emmc\"><a class=\"anchor\" href=\"#写入emmc\">#</a> 写入 emmc</h3>\n<p>到上一步其实已经 ok 了，盒子能通过不同启动 U 盘使用各自系统，方便自由。<br />\n也可以把系统写入 N1 emmc 里，就不用通过 U 盘启动了。<br />\n当然写入 emmc 后，系统不是安卓没有 adb，想改刷别的系统，依然可以用拆机短接救砖的办法或者 ddbr 方法 (没试过，这里记录下)<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sdW90aWFueWkudmMvMTM0Ni5odG1sL2NvbW1lbnQtcGFnZS0x\"> 使用 ddbr 恢复官改系统</span></p>\n<p>参考链接</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNzg3MjQzNDg=\">https://zhuanlan.zhihu.com/p/378724348</span></li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 使用 ssh 工具 (PuTTY、SecureCRT 等) 远程连接 ssh root@&lt;N1 的 ip> 如下，</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 如果之前进入系统时，没有设置密码的话，默认密码是 coreelec,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ssh</span> root@192.168.1.10</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 执行 /flash 目录下的命令 写入 emmc</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>/flash/installtoemmc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 第一个选 yes 剩下的全部 y（执行完毕会自动重启）-> 重启后关机拔下 U 盘再次重启。如果一切顺利，此时盒子应该顺利从 EMMC 启动 Coreelec 了</span></pre></td></tr></table></figure><div class=\"note info\">\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmlnaHQuY29tLmNuL2ZvcnVtL3RocmVhZC00MTI3MjE3LTEtMS5odG1s\">https://www.right.com.cn/forum/thread-4127217-1-1.html</span><br />\n 本来是按照 Damenly 提供的脚本，想写入 emmc，结果抄作业失败了。</p>\n</div>\n<h2 id=\"部分工具保存到github\"><a class=\"anchor\" href=\"#部分工具保存到github\">#</a> 部分工具保存到 github</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtYmVyNmh1YS9jZG4vdHJlZS9tYXN0ZXIvbjE=\">https://github.com/amber6hua/cdn/tree/master/n1</span></li>\n</ul>\n",
            "tags": [
                "教程",
                "教程"
            ]
        },
        {
            "id": "https://amber6hua.github.io/linux/vbox-openwrt/",
            "url": "https://amber6hua.github.io/linux/vbox-openwrt/",
            "title": "Vbox虚拟机Docker安装Openwrt",
            "date_published": "2023-08-30T06:21:29.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>之前就好奇什么是软路由旁路由，但是没有设备<br />\n正好看见通过 Docker 安装 Openwrt 的文章，跟着动手学习下</p>\n<h2 id=\"我的基本环境\"><a class=\"anchor\" href=\"#我的基本环境\">#</a> 我的基本环境</h2>\n<p>matebook<br />\nVBox 虚拟机 ubuntu 镜像<br />\n网路设置<br />\n连接方式： 桥接网卡<br />\n网卡： WIFI 6<br />\n 混杂模式： 全部允许</p>\n<h2 id=\"开启网卡混杂模式\"><a class=\"anchor\" href=\"#开启网卡混杂模式\">#</a> 开启网卡混杂模式</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看网卡名称，如我的是 enp0s3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ifconfig</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 开启网卡混杂模式 </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> enp0s3 promisc on</pre></td></tr></table></figure><h2 id=\"开启-ipv4-转发\"><a class=\"anchor\" href=\"#开启-ipv4-转发\">#</a> 开启 ipv4 转发</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/sysctl.conf </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#添加 net.ipv4.ip_forward = 1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sysctl -p /etc/sysctl.conf</pre></td></tr></table></figure><h2 id=\"配置macvlan模式的docker网络\"><a class=\"anchor\" href=\"#配置macvlan模式的docker网络\">#</a> 配置 macvlan 模式的 Docker 网络</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># --subnet=192.168.1.0/24   #填入宿主机网段</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># --gateway=192.168.1.1     #网关</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># parent=eth0    #宿主机 192.168.1.0/24 所使用的网卡</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>docker network create -d macvlan --subnet<span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.1.0/24 --gateway<span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.1.1 -o <span class=\"token assign-left variable\">parent</span><span class=\"token operator\">=</span>enp0s3 macnet</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 查看是否创建成功</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>docker network <span class=\"token function\">ls</span></pre></td></tr></table></figure><h2 id=\"创建网络配置文件\"><a class=\"anchor\" href=\"#创建网络配置文件\">#</a> 创建网络配置文件</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> -p /home/docker/openwrt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">vi</span> /home/docker/openwrt/network</pre></td></tr></table></figure><p>network 配置文件如下</p>\n<p>其中修改 ipaddr，gateway，dns 为需要的地址。</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>config interface 'loopback'</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        option ifname 'lo'</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        option proto 'static'</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        option ipaddr '127.0.0.1'</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        option netmask '255.0.0.0'</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>config globals 'globals'</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        option packet_steering '1'</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>config interface 'lan'</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        option type 'bridge'</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        option ifname 'eth0'</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        option proto 'static'</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        option netmask '255.255.255.0'</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        option ip6assign '60'</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        option ipaddr '192.168.1.147'</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        option gateway '192.168.1.1'</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        option dns '192.168.1.1'</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>config interface 'vpn0'</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        option ifname 'tun0'</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        option proto 'none'</pre></td></tr></table></figure><h2 id=\"拉取镜像并初始化\"><a class=\"anchor\" href=\"#拉取镜像并初始化\">#</a> 拉取镜像并初始化</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># --privileged 使用该参数，container 内的 root 拥有真正的 root 权限。否则，container 内的 root 只是外部的一个普通用户权限。privileged 启动的容器，可以看到很多 host 上的设备，并且可以执行 mount。甚至允许你在 docker 容器中启动 docker 容器。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># --network 刚刚创建的 macvlan 网络  </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># --ip 不冲突的 IP 地址  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># -v 映射目录 （这里映射的是网络配置）</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># openwrt 镜像选择 nonnichen/nonniwrt 或 piaoyizy/openwrt-x86</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>docker run --restart always --name openwrt -d --network macnet --privileged --ip <span class=\"token number\">192.168</span>.1.147  -v /home/docker/openwrt/network:/etc/config/network nonnichen/nonniwrt /sbin/init</pre></td></tr></table></figure><h2 id=\"操作容器\"><a class=\"anchor\" href=\"#操作容器\">#</a> 操作容器</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入容器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker <span class=\"token builtin class-name\">exec</span> -it openwrt <span class=\"token function\">bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 编辑网络 （初始化容器时可以忽略映射网络配置目录，自己编辑网络）</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">vi</span> /etc/config/network</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 重启网卡</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>/etc/init.d/network restart</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 修改密码命令（初始密码一般是 password, 可以根据需要修改）</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">passwd</span></pre></td></tr></table></figure><h2 id=\"访问openwrt\"><a class=\"anchor\" href=\"#访问openwrt\">#</a> 访问 openwrt</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMS4xNDc=\">http://192.168.1.147</span> （前面配置的容器 ip）<br />\n默认用户名：root<br />\n 默认密码：password</p>\n<h2 id=\"进入openwrt\"><a class=\"anchor\" href=\"#进入openwrt\">#</a> 进入 openwrt</h2>\n<blockquote>\n<p>进入 网络 =》接口 修改配置<br />\n没有特殊需要一般都关闭 ipv6 关闭 dhcp</p>\n</blockquote>\n<h2 id=\"无线网卡-macvlan-组合有问题\"><a class=\"anchor\" href=\"#无线网卡-macvlan-组合有问题\">#</a> 无线网卡 + macvlan 组合有问题</h2>\n<p>虽然 openwrt 成功安装，但是发现容器内无法 ping 通网关，无法访问外网，可以 ping 通物理机<br />\n因为对 openwrt 和 macvlan 半懂不懂，只能边查询边配置，如 openwrt 中，不勾选桥接，防火墙规则等等，结果都不行</p>\n<p>最后发现可能是无线网卡 + macvlan 组合的问题，由于用的笔记本只能用无线网卡，且只有 wifi 连接，没法继续测试。</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2Fvbml1aHVvLmNvbS9xdWVzdGlvbi9kZXRhaWwtMjM3MTI1My5odG1s\">https://www.saoniuhuo.com/question/detail-2371253.html</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaWN1LmJlL21hY3ZsYW4tdnMtaXB2bGFu\">https://hicu.be/macvlan-vs-ipvlan</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTY5MDA4NTcvZG9ja2VyLW5ldHdvcmstbWFjdmxhbi1kcml2ZXItZ2F0ZXdheS11bnJlYWNoYWJsZS81NjkxODQ1NyM1NjkxODQ1Nw==\">https://stackoverflow.com/questions/56900857/docker-network-macvlan-driver-gateway-unreachable/56918457#56918457</span></li>\n</ul>\n<p>看了上面的问题答案，于是尝试使用 ipvlan，并且初始化一个轻型容器 busybox，发现可以正常 ping 通网关，访问外网</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">## 创建 ipvlan </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker network create -d ipvlan --subnet <span class=\"token number\">192.168</span>.1.0/24 -o <span class=\"token assign-left variable\">ipvlan_mode</span><span class=\"token operator\">=</span>l2 -o <span class=\"token assign-left variable\">parent</span><span class=\"token operator\">=</span>enp0s3 ipvlan</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">## 初始化容器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>docker run --net<span class=\"token operator\">=</span>ipvlan --ip<span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.1.145 -id --name c1 busybox <span class=\"token function\">sh</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">## 进入容器</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>docker <span class=\"token builtin class-name\">exec</span> -it c1 <span class=\"token function\">sh</span></pre></td></tr></table></figure><p>最后修改网络配置，重新初始化了一个关联 ipvlan 的 openwrt 容器<br />\n这里注释了 option type 'bridge'，因为关联 ipvlan 网络时，发现类型为桥接时，网络配置失败</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>config interface 'loopback'</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        option device 'lo'</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        option proto 'static'</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        option ipaddr '127.0.0.1'</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        option netmask '255.0.0.0'</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>config globals 'globals'</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        option packet_steering '1'</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>config interface 'lan'</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">#option type 'bridge'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        option ifname 'eth0'</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        option proto 'static'</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        option ipaddr '192.168.1.147'</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        option ipv6 '0'</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        option netmask '255.255.255.0'</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        option gateway '192.168.1.1'</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        option dns '192.168.1.1'</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run --restart always --name openwrt -d --network ipvlan --privileged --ip <span class=\"token number\">192.168</span>.1.147  -v /home/docker/openwrt/network:/etc/config/network nonnichen/nonniwrt /sbin/init</pre></td></tr></table></figure><h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NjU1MjA3NjA=\">https://zhuanlan.zhihu.com/p/565520760</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kN2ZiYmQxNjUwNTI=\">https://www.jianshu.com/p/d7fbbd165052</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2ZtZW0uY29tLzIwMjEvMDgvZG9ja2VyLW9wZW53cnQuaHRtbCNnb29nbGVfdmlnbmV0dGU=\">https://www.cfmem.com/2021/08/docker-openwrt.html#google_vignette</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25kZDE5OTYvYXJ0aWNsZS9kZXRhaWxzLzEwOTE4NTc0Nw==\">https://blog.csdn.net/ndd1996/article/details/109185747</span></li>\n</ul>\n",
            "tags": [
                "Linux",
                "教程",
                "Linux"
            ]
        },
        {
            "id": "https://amber6hua.github.io/linux/aria2-rclone/",
            "url": "https://amber6hua.github.io/linux/aria2-rclone/",
            "title": "Aria2 + Rclone 远程主机下载并上传OneDrive",
            "date_published": "2023-08-16T06:03:48.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>Play With Docker 是 Dockers hub 提供的免费的远程主机，并且自带 docker 环境，方便用户安装 docker 容器并测试，<br />\n之前申请的微软 E5 OneDrive 有 5T 空间，说实话空间虽然大，但是在国内访问速度太慢<br />\n于是尝试在这个白嫖的远程主机中安装 Aria2 + Rclone，下载资源并上传到 OneDrive 中</p>\n<h2 id=\"基本环境和工具\"><a class=\"anchor\" href=\"#基本环境和工具\">#</a> 基本环境和工具</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLnBsYXktd2l0aC1kb2NrZXIuY29t\">Play With Docker</span> 远程主机</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1AzVEVSWC9hcmlhMi5zaA==\">Aria2 下载工具</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yY2xvbmUub3Jn\">Rclone 挂载工具</span></li>\n<li><a href=\"portal.azure.com\">OneDrive 云存储</a></li>\n</ul>\n<h2 id=\"登录远程主机\"><a class=\"anchor\" href=\"#登录远程主机\">#</a> 登录远程主机</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLnBsYXktd2l0aC1kb2NrZXIuY29t\">Play With Docker</span> 远程主机，在浏览器上无法使用复制粘贴功能，可以用本地主机 ssh 登录。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># ssh 登录远程主机</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ssh</span> ***@direct.labs.play-with-docker.com</pre></td></tr></table></figure><div class=\"note info\">\n<p>需要注意该远程主机的空间</p>\n</div>\n<h2 id=\"安装rclone\"><a class=\"anchor\" href=\"#安装rclone\">#</a> 安装 rclone</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 安装拓展工具</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>apk <span class=\"token function\">add</span> <span class=\"token function\">wget</span> <span class=\"token function\">curl</span> ca-certificates fuse</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 下载 Rclone</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">wget</span> https://downloads.rclone.org/v1.61.1/rclone-v1.61.1-linux-amd64.zip</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">unzip</span> rclone-*-linux-amd64.zip</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">cd</span> rclone-*-linux-amd64</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">cp</span> rclone /usr/bin/</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">chown</span> root:root /usr/bin/rclone</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token number\">755</span> /usr/bin/rclone</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">mkdir</span> -p /usr/local/share/man/man1</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">cp</span> rclone.1 /usr/local/share/man/man1/</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>mandb</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 创建 rclone 的挂载 OneDrive 节点（可以忽略）</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">mkdir</span> /usr/local/onedrive</pre></td></tr></table></figure><h2 id=\"安装aria2\"><a class=\"anchor\" href=\"#安装aria2\">#</a> 安装 Aria2</h2>\n<p>下载 aria2.sh 完成后，执行脚本，根据选项进行安装</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> -N git.io/aria2.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">chmod</span> +x aria2.sh <span class=\"token operator\">&amp;&amp;</span> ./aria2.sh</pre></td></tr></table></figure><p>默认安装成功后</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Aria2 简单配置信息：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token key atrule\">IPv4 地址</span>      <span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token key atrule\">IPv6 地址</span>      <span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token key atrule\">RPC 端口</span>       <span class=\"token punctuation\">:</span> <span class=\"token number\">6800</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token key atrule\">RPC 密钥</span>       <span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token key atrule\">下载目录</span>       <span class=\"token punctuation\">:</span> /root/downloads</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> AriaNg 链接    <span class=\"token punctuation\">:</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>注意：此时 aria2 只能正常下载<br />\n如需要下载并上传需要修改配置 .aria2c/aria2.conf<br />\n 下载完成后执行的命令 原先的配置是 /root/.aria2c/clean.sh 需要修改成 upload.sh 才能上传<br />\n on-download-complete=/root/.aria2c/upload.sh</p>\n<p>并且之前绑定的 Rclone name 需要和 /root/.aria2c/script.conf 中的配置对应<br />\n网盘名称 (RCLONE 配置时填写的 name)<br />\ndrive-name=OneDrive<br />\n 修改配置后需要重启 aria2 服务，可参考 进阶 Aria2c 命令行方式</p>\n</div>\n<h3 id=\"安装ariang\"><a class=\"anchor\" href=\"#安装ariang\">#</a> 安装 AriaNG</h3>\n<p>Aria2 没有图形化界面，需要安装 AriaNG，因为当前远程主机有 docker 环境，可以直接用 docker 安装，<br />\n访问 主机地址：6880 进入配置页面<br />\n然后根据上面的信息配置，配置 AriaNG，注意白嫖的远程主机的地址，配置好 RPC, 就可以使用了。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -d <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    --name ariang <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    --restart unless-stopped <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    --log-opt max-size<span class=\"token operator\">=</span>1m <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    -p <span class=\"token number\">6880</span>:6880 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    p3terx/ariang</pre></td></tr></table></figure><h2 id=\"进阶aria2c-命令行方式\"><a class=\"anchor\" href=\"#进阶aria2c-命令行方式\">#</a> 进阶 Aria2c 命令行方式</h2>\n<p>准备</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 复制一个新的配置文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">cp</span> .aria2c/aria2.conf .aria2c/aria3.conf</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 修改配置 必须注释 aria2.session，因为命令行方式，直接输入下载链接参数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">vi</span> .aria2c/aria3.conf</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 从会话文件中读取下载任务</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#input-file=/root/.aria2c/aria2.session</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># Aria2 退出时或指定的时间间隔会保存 `错误 / 未完成` 的下载任务到会话文件</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#save-session=/root/.aria2c/aria2.session</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 下载完成后执行的命令 原先的配置是 /root/.aria2c/clean.sh 需要修改成 upload.sh 才能上传</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>on-download-complete<span class=\"token operator\">=</span>/root/.aria2c/upload.sh</pre></td></tr></table></figure><p>编辑 script.conf<br />\nvi /root/.aria2c/script.conf</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 编辑 script.conf</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">vi</span> /root/.aria2c/script.conf</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 网盘名称 (RCLONE 配置时填写的 name)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>drive-name<span class=\"token operator\">=</span>OneDrive</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 注意 Rclone 配置时 name 必须相同</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Current remotes:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Name                 Type</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span>                 <span class=\"token operator\">==</span><span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>OneDrive             onedrive</pre></td></tr></table></figure><p>命令行示例</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># --conf-path 读取配置文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># -D 守护进程</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># -S *.torrent 获取种子列表</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># --select-file=1,4-7 *.torrent 选择要下载内容 如：1，4，5，6，7</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 避免冲突，先把之前启动的 aria2 关闭，可以通过./aria2.sh 脚本关闭，也可以 kill &lt;pid></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 查找 aria2 的 pid</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> aria2</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">kill</span> <span class=\"token operator\">&lt;</span>pid<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># aria2c 命令行示例， 测试是否能够正常下载上传</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>aria2c --conf-path<span class=\"token operator\">=</span>/root/.aria2c/aria3.conf <span class=\"token string\">'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'</span></pre></td></tr></table></figure><h2 id=\"rclone-挂载onedrive\"><a class=\"anchor\" href=\"#rclone-挂载onedrive\">#</a> Rclone 挂载 OneDrive</h2>\n<blockquote>\n<p>参考地址 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81NTg3MzAwNy9hcnRpY2xlL2RldGFpbHMvMTI2NTgxMzI4\">https://blog.csdn.net/weixin_55873007/article/details/126581328</span></p>\n</blockquote>\n<ul>\n<li>首先 OneDrive 需要注册应用（其中选择 web 填写 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo1MzY4Mg==\">http://localhost:53682</span>），并创建密钥</li>\n<li>获得 client_id 和 client_secret 后，通过 rclone 获得 token</li>\n<li>如果 Rclone 所在的宿主机自带图像化界面和浏览器，则可以根据 rclone config，一步步配置</li>\n<li>否则也可以其他带浏览器的机器上，如果 windows 也下载个 rclone.exe 获得 token, 复制到宿主机中</li>\n<li>注意：之前下载最新版本的 rclone, 挂载过程中遇 fuse 问题，看讨论需要 fuse3, 没搞好</li>\n<li>于是下载 v1.16.1 版本，正常挂载</li>\n<li>如果单纯为了把 aria2 的下载内容上传到 OneDrive 中，rclone mount 步骤可以省略</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 挂载到 /usr/local/onedrive</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rclone <span class=\"token function\">mount</span> OneDrive:/ /usr/local/onedrive --allow-other --allow-non-empty --vfs-cache-mode writes <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 取消挂载</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fusermount -u /usr/local/onedrive</pre></td></tr></table></figure><h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wM3RlcnguY29tL2FyY2hpdmVzL29mZmxpbmUtZG93bmxvYWQtb2Ytb25lZHJpdmUtZ2RyaXZlLmh0bWw=\">https://p3terx.com/archives/offline-download-of-onedrive-gdrive.html</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81NTg3MzAwNy9hcnRpY2xlL2RldGFpbHMvMTI2NTgxMzI4\">https://blog.csdn.net/weixin_55873007/article/details/126581328</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yY2xvbmUub3JnL2NvbW1hbmRzL3JjbG9uZV9tb3VudC8=\">https://rclone.org/commands/rclone_mount/</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmx1ZXNreXhuLmNvbS8yMDIyMDkvNjUxMC5odG1s\">https://www.blueskyxn.com/202209/6510.html</span></li>\n</ul>\n",
            "tags": [
                "Linux",
                "教程",
                "Linux"
            ]
        },
        {
            "id": "https://amber6hua.github.io/fastadmin/fastadmin-doc-13/",
            "url": "https://amber6hua.github.io/fastadmin/fastadmin-doc-13/",
            "title": "FastAdmin 个人记录 - 自定义字段排序",
            "date_published": "2023-05-30T02:31:21.000Z",
            "content_html": "<blockquote>\n<p>fastadmin 默认排序字段是 weigh, 方法是 ajax/weigh<br />\n 这里以自定义字段 sort 为例</p>\n</blockquote>\n<h2 id=\"根据需要添加对应控制器方法或改写ajaxweigh-修改todo处\"><a class=\"anchor\" href=\"#根据需要添加对应控制器方法或改写ajaxweigh-修改todo处\">#</a> 根据需要添加对应控制器方法或改写 ajax/weigh 修改 TODO 处</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">protected</span> <span class=\"token variable\">$noNeedRight</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'weigh'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * 通用排序</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">weigh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 排序的数组</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$ids</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token operator\">-></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ids\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 拖动的记录 ID</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$changeid</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token operator\">-></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"changeid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 操作字段</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token variable\">$field</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token operator\">-></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"field\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 操作的数据表</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token variable\">$table</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token operator\">-></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"table\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name static-context\">Validate</span><span class=\"token operator\">::</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$table</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"alphaDash\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 主键</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token variable\">$pk</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token operator\">-></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"pk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">// 排序的方式</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token variable\">$orderway</span> <span class=\"token operator\">=</span> <span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token operator\">-></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"orderway\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token variable\">$orderway</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$orderway</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'asc'</span> <span class=\"token operator\">?</span> <span class=\"token string single-quoted-string\">'ASC'</span> <span class=\"token punctuation\">:</span> <span class=\"token string single-quoted-string\">'DESC'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$sour</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$weighdata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token variable\">$ids</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">','</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$ids</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token variable\">$prikey</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$pk</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^[a-z0-9\\-_]+$/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pk</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$pk</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token function\">model</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$table</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">getPk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token variable\">$pid</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token operator\">-></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"pid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">//TODO 限制更新的字段</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token variable\">$field</span> <span class=\"token operator\">=</span> <span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$field</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'sort'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$field</span> <span class=\"token punctuation\">:</span> <span class=\"token string single-quoted-string\">'weigh'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">// 如果设定了 pid 的值，此时只匹配满足条件的 ID, 其它忽略</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$pid</span> <span class=\"token operator\">!==</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token variable\">$hasids</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token variable\">$list</span> <span class=\"token operator\">=</span> <span class=\"token function\">model</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$table</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$prikey</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'in'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$ids</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'pid'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'in'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pid</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">field</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$prikey</span><span class=\"token punctuation\">&#125;</span></span>,pid\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$list</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$k</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token variable\">$hasids</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$v</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$prikey</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token variable\">$ids</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_values</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_intersect</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ids</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$hasids</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token variable\">$list</span> <span class=\"token operator\">=</span> <span class=\"token function\">model</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$table</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">field</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$prikey</span></span>,<span class=\"token interpolation\"><span class=\"token variable\">$field</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$prikey</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'in'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$ids</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">order</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$field</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$orderway</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$list</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$k</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token variable\">$sour</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$v</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$prikey</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token variable\">$weighdata</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$v</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$prikey</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$v</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$field</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token variable\">$position</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_search</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$changeid</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$ids</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token variable\">$desc_id</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sour</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$position</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$sour</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$position</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sour</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 移动到目标的 ID 值，取出所处改变前位置的值</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token variable\">$sour_id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$changeid</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token variable\">$weighids</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token variable\">$temp</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_values</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_diff_assoc</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ids</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sour</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$temp</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$m</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$n</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$sour_id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token variable\">$offset</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$desc_id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$sour_id</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$temp</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                    <span class=\"token variable\">$offset</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$m</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$temp</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$m</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$sour_id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                    <span class=\"token variable\">$offset</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$m</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$temp</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$m</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$sour_id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$weighdata</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$offset</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token variable\">$weighids</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$n</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$weighdata</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$offset</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token function\">model</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$table</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$prikey</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$n</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$field</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$weighdata</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$offset</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"对应控制器js-定义自定义字段排序\"><a class=\"anchor\" href=\"#对应控制器js-定义自定义字段排序\">#</a> 对应控制器 js - 定义自定义字段排序</h2>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 初始化表格参数配置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            Table<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                extend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                    <span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                    dragsort_url<span class=\"token operator\">:</span> <span class=\"token string\">'control/tutorial/weigh'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                    table<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            Table<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>dragsortfield <span class=\"token operator\">=</span> <span class=\"token string\">'sort'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// 省略</span></pre></td></tr></table></figure><h2 id=\"对应model-添加记录时如果未设置排序自动赋值\"><a class=\"anchor\" href=\"#对应model-添加记录时如果未设置排序自动赋值\">#</a> 对应 model - 添加记录时，如果未设置排序，自动赋值</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">protected</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">afterInsert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token variable\">$pk</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$row</span><span class=\"token operator\">-></span><span class=\"token function\">getPk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'sort'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'sort'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token variable\">$row</span><span class=\"token operator\">-></span><span class=\"token function\">getQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pk</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$pk</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'sort'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$pk</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "FastAdmin",
                "教程",
                "FastAdmin"
            ]
        },
        {
            "id": "https://amber6hua.github.io/docker/docker-cloud-pc/",
            "url": "https://amber6hua.github.io/docker/docker-cloud-pc/",
            "title": "Play With Docker 白嫖个人云电脑",
            "date_published": "2023-05-25T07:08:16.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>利用 docker hub 提供的 Play With Docker 白嫖一个可以访问外网的个人云电脑</p>\n<h2 id=\"转发自\"><a class=\"anchor\" href=\"#转发自\">#</a> 转发自</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmlkYXJpYW4uY29tL2t1YWktc3UtY2h1YW5nLWppYW4tbWlhbi1mZWktZ2UtcmVuLXl1bi1kaWFuLW5hby1rZS15b25nLXl1LXpodS1jZS16aGFuZy1oYW8tZGVuZw==\">https://blog.idarian.com/kuai-su-chuang-jian-mian-fei-ge-ren-yun-dian-nao-ke-yong-yu-zhu-ce-zhang-hao-deng</span></p>\n<h2 id=\"摘要\"><a class=\"anchor\" href=\"#摘要\">#</a> 摘要</h2>\n<p>注册 Dockre 账号并登录 Play With Docker，复制粘贴以下代码，创建一个名为 ubuntu-xfce-vnc 的容器，设置密码为 shopifyisfine，打开 6666 端口即可登录。注意每次登录限时四小时。</p>\n<h2 id=\"1注册账号\"><a class=\"anchor\" href=\"#1注册账号\">#</a> 1. 注册账号</h2>\n<p>首先，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9zaWdudXA=\">注册一个免费 Dockre 账号</span>，用户登陆创建实例</p>\n<h2 id=\"2-登陆使用\"><a class=\"anchor\" href=\"#2-登陆使用\">#</a> 2. 登陆使用</h2>\n<p>注册完之后，登录 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLnBsYXktd2l0aC1kb2NrZXIuY29tLw==\">Play With Docker</span>，一步步复制粘贴即可。<br />\n提示：为避免资源滥用，每次登录限时四小时，用于注册账号和浏览网页足够。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> /root/ubuntu <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> /root/ubuntu</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>apk <span class=\"token function\">add</span> <span class=\"token function\">nano</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">nano</span> docker-compose.yml</pre></td></tr></table></figure><figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.5'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">ubuntu-xfce-vnc</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> xfce</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> imlala/ubuntu<span class=\"token punctuation\">-</span>xfce<span class=\"token punctuation\">-</span>vnc<span class=\"token punctuation\">-</span>novnc<span class=\"token punctuation\">:</span>latest</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">shm_size</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2gb\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">-</span> 5555<span class=\"token punctuation\">:</span><span class=\"token number\">5900</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">-</span> 6666<span class=\"token punctuation\">:</span><span class=\"token number\">6080</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">-</span> VNC_PASSWD=shopifyisfine</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">-</span> GEOMETRY=1920x1080</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">-</span> DEPTH=24</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">-</span> ./Downloads<span class=\"token punctuation\">:</span>/root/Downloads</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> unless<span class=\"token punctuation\">-</span>stopped</pre></td></tr></table></figure><p>提示：粘贴之后按 Ctrl + X，再按 Y，接着按回车键进行保存</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker-compose up -d</pre></td></tr></table></figure><p>打开 6666 端口，登录密码： shopifyisfine</p>\n<h2 id=\"进阶\"><a class=\"anchor\" href=\"#进阶\">#</a> 进阶</h2>\n<p>由于控制台无法复制，一行行打代码也麻烦，可以把 docker-compose.yml 保存到自己的 github 项目中，通过 wget 下载</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">## 下载 docker-compose.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">wget</span> https://github.com/amber6hua/cdn/raw/master/docker/ubuntu/docker-compose.yml</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>docker-compose up -d</pre></td></tr></table></figure>",
            "tags": [
                "Docker",
                "教程",
                "Docker"
            ]
        },
        {
            "id": "https://amber6hua.github.io/onedrive-vercel-index/",
            "url": "https://amber6hua.github.io/onedrive-vercel-index/",
            "title": "Onedrive Vercel Index 记录部署大致流程",
            "date_published": "2023-04-19T07:10:04.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>heroku 不让白嫖了<br />\n换 Vercel 继续白嫖</p>\n<h2 id=\"项目地址\"><a class=\"anchor\" href=\"#项目地址\">#</a> 项目地址</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NwZW5jZXJ3b29vL29uZWRyaXZlLXZlcmNlbC1pbmRleC8=\">Onedrive Vercel Index</span></p>\n<h2 id=\"部署\"><a class=\"anchor\" href=\"#部署\">#</a> 部署</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vdmkuc3dvLm1vZS9kb2NzL2dldHRpbmctc3RhcnRlZA==\">部署文档</span></p>\n<ul>\n<li>\n<p>fork 项目</p>\n</li>\n<li>\n<p>修改 config/site.config.js</p>\n<ul>\n<li>userPrincipleName 修改成自己 onedrive 账户</li>\n<li>baseDirectory 修改成需要展示的目录， 值为 / 表示展示全部</li>\n<li>(也可以在 vercel 对应项目的 setting 下 设置 Environment Variables)</li>\n</ul>\n</li>\n<li>\n<p>注册 <span class=\"exturl\" data-url=\"aHR0cHM6Ly92ZXJjZWwuY29tLw==\">Vercel</span> 成功后，导入刚刚 fork 的项目</p>\n</li>\n<li>\n<p>进入 setting 设置 Environment Variables</p>\n<ul>\n<li>添加 REDIS_URL</li>\n</ul>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly92ZXJjZWwuY29tL2ludGVncmF0aW9ucw==\">Vercel Integrations</span> 提供免费 redis 服务 <span class=\"exturl\" data-url=\"aHR0cHM6Ly92ZXJjZWwuY29tL2ludGVncmF0aW9ucy91cHN0YXNo\">upstash</span></p>\n<ul>\n<li>add Integrations 并进入 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLnVwc3Rhc2guY29tLw==\">upstash 控制台</span></li>\n<li>创建一个实例</li>\n<li>复制 redis:// 。。。 到 REDIS_URL</li>\n<li>注意如果勾选 ssl 则地址开头为 rediss://:</li>\n</ul>\n</li>\n<li>\n<p>重新加载后进入 Onedrive Vercel Index</p>\n</li>\n<li>\n<p>配置正确的情况下，会得到怎么绑定 onedrive 的页面，根据提示操作</p>\n</li>\n</ul>\n",
            "tags": [
                "教程",
                "教程"
            ]
        },
        {
            "id": "https://amber6hua.github.io/fastadmin/fastadmin-doc-12/",
            "url": "https://amber6hua.github.io/fastadmin/fastadmin-doc-12/",
            "title": "FastAdmin 个人记录 - 自定义搜索渲染",
            "date_published": "2023-03-03T02:31:21.000Z",
            "content_html": "<h2 id=\"单个字段自定义搜索渲染\"><a class=\"anchor\" href=\"#单个字段自定义搜索渲染\">#</a> 单个字段自定义搜索渲染</h2>\n<blockquote>\n<p>selectpage 搜索 例：customerID 按需替换</p>\n</blockquote>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 在普通搜索渲染后</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            table<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'post-common-search.bs.table'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> table</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token keyword\">var</span> form <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"form\"</span><span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span>$commonsearch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input[name='customerID']\"</span><span class=\"token punctuation\">,</span> form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selectpage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"source\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"customer/customer/index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"primaryKey\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"field\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"charname\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"orderBy\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"id desc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                Form<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">cxselect</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                Form<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">selectpage</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>等于排除 搜索 例：mid 按需替换</p>\n</blockquote>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 在普通搜索渲染后</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            table<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'post-common-search.bs.table'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> table</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token keyword\">var</span> form <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"form\"</span><span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span>$commonsearch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token keyword\">let</span> html <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;!--显式的operate操作符-->\\n'</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                    <span class=\"token string\">'                        &lt;div class=\"input-group\">\\n'</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                    <span class=\"token string\">'                            &lt;div class=\"input-group-btn\">\\n'</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token string\">'                                &lt;select class=\"form-control operate\" data-name=\"mid\" style=\"width:60px;\">\\n'</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token string\">'                                    &lt;option value=\"=\" selected>等于&lt;/option>\\n'</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    <span class=\"token string\">'                                    &lt;option value=\"&lt;>\">排除&lt;/option>\\n'</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token string\">'                                &lt;/select>\\n'</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token string\">'                            &lt;/div>\\n'</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token string\">'                            &lt;input class=\"form-control\" type=\"text\" name=\"mid\" id=\"mid\" placeholder=\"\" value=\"\"/>\\n'</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    <span class=\"token string\">'                        &lt;/div>'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input[name='mid']\"</span><span class=\"token punctuation\">,</span> form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"开发示例-自定义搜索表单模板-searchformtemplate\"><a class=\"anchor\" href=\"#开发示例-自定义搜索表单模板-searchformtemplate\">#</a> 开发示例 自定义搜索表单模板 searchFormTemplate</h2>\n<blockquote>\n<p>searchFormTemplate</p>\n</blockquote>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>table<span class=\"token punctuation\">.</span><span class=\"token function\">bootstrapTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                <span class=\"token operator\">...</span>省略</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                searchFormVisible<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                searchFormTemplate<span class=\"token operator\">:</span> <span class=\"token string\">'customformtpl'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token operator\">...</span>省略</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>对应模板</p>\n</blockquote>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>customformtpl<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>form表单必须添加form<span class=\"token operator\">-</span>commsearch这个类<span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"form-commonsearch\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token string\">\"border-radius:2px;margin-bottom:10px;background:#f5f5f5;padding:15px 20px;\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token operator\">&lt;</span>h4<span class=\"token operator\">></span>自定义搜索表单<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h4<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token operator\">&lt;</span>hr<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"row\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-xs-12 col-sm-6 col-md-3\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"form-group\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                        <span class=\"token operator\">&lt;</span>label <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"control-label\"</span><span class=\"token operator\">></span><span class=\"token constant\">ID</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>显式的operate操作符<span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                        <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"input-group\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                            <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"input-group-btn\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                                <span class=\"token operator\">&lt;</span>select <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"form-control operate\"</span> data<span class=\"token operator\">-</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span> style<span class=\"token operator\">=</span><span class=\"token string\">\"width:60px;\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                                    <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"=\"</span> selected<span class=\"token operator\">></span>等于<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                    <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\">\"</span><span class=\"token operator\">></span>大于<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                                    <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"&lt;\"</span><span class=\"token operator\">></span>小于<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                            <span class=\"token operator\">&lt;</span>input <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"form-control\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-xs-12 col-sm-6 col-md-3\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"form-group\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        <span class=\"token operator\">&lt;</span>label <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"control-label\"</span><span class=\"token operator\">></span>标题<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>隐式的operate操作符，必须携带一个<span class=\"token keyword\">class</span>为operate隐藏的文本框<span class=\"token punctuation\">,</span>且它的data<span class=\"token operator\">-</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"字段\"</span><span class=\"token punctuation\">,</span>值为操作符<span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                        <span class=\"token operator\">&lt;</span>input <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"operate\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"hidden\"</span> data<span class=\"token operator\">-</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"title\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"=\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        <span class=\"token operator\">&lt;</span>input <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"form-control\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"title\"</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"请输入查找的标题\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-xs-12 col-sm-6 col-md-3\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"form-group\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                        <span class=\"token operator\">&lt;</span>label <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"control-label\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                        <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"row\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                            <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-xs-6\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                                <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn btn-success btn-block\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"提交\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                            <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-xs-6\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                                <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"reset\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn btn-primary btn-block\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"重置\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"表格自定义搜索拓展下拉搜索操作符\"><a class=\"anchor\" href=\"#表格自定义搜索拓展下拉搜索操作符\">#</a> 表格自定义搜索拓展，下拉搜索操作符</h2>\n<ul>\n<li>给表格 field，增加 operate: 'number' ，自定义搜索等于大于小于</li>\n<li>在 public/assets/js/bootstrap-table-commonsearch.js 新增 number 判断</li>\n</ul>\n<p>具体链接</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hc2suZmFzdGFkbWluLm5ldC9hcnRpY2xlLzEwNzUzLmh0bWw=\">https://ask.fastadmin.net/article/10753.html</span></li>\n</ul>\n",
            "tags": [
                "FastAdmin",
                "教程",
                "FastAdmin"
            ]
        },
        {
            "id": "https://amber6hua.github.io/docker/docker-networks/",
            "url": "https://amber6hua.github.io/docker/docker-networks/",
            "title": "docker-compose.yml networks",
            "date_published": "2023-03-01T08:21:48.000Z",
            "content_html": "<h2 id=\"参考连接\"><a class=\"anchor\" href=\"#参考连接\">#</a> 参考连接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zMDA0ZmJjZTRkMzc=\">https://www.jianshu.com/p/3004fbce4d37</span></li>\n</ul>\n<h2 id=\"默认网络\"><a class=\"anchor\" href=\"#默认网络\">#</a> 默认网络</h2>\n<p>docker-compose up 的时候，默认创建一个 以 _default 为后缀的默认网络</p>\n<p>docker-compose.yml 中的容器都属于默认网络</p>\n<h2 id=\"自定义网络\"><a class=\"anchor\" href=\"#自定义网络\">#</a> 自定义网络</h2>\n<p>可能通过一级配置 networks 来自定义网络，可以创建更复杂的网络选项和配置，也可以用来连接已经存在的网络（不是通过 compose 创建的）</p>\n<p>每个 service 配置下也可以指定 networks 配置，来指定一级配置的网络。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">proxy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> ./proxy</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> frontend</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> ./app</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> frontend</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">-</span> backend</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> postgres</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">-</span> backend</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token key atrule\">frontend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\"># Use a custom driver</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token key atrule\">driver</span><span class=\"token punctuation\">:</span> custom<span class=\"token punctuation\">-</span>driver<span class=\"token punctuation\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># Use a custom driver which takes special options</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token key atrule\">driver</span><span class=\"token punctuation\">:</span> custom<span class=\"token punctuation\">-</span>driver<span class=\"token punctuation\">-</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token key atrule\">driver_opts</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token key atrule\">foo</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token key atrule\">bar</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2\"</span></pre></td></tr></table></figure><ol>\n<li>一级配置 networks 用来创建自定义的网络 。这里配置了两个 frontend 和 backend . 且自定义了网络类型。</li>\n<li>每一个 services 下，proxy , app , db 都定义了一下 networks 配置。\n<ul>\n<li>proxy 只加入到 frontend 网络。</li>\n<li>db 只加入到 backend 网络。</li>\n<li>app 同时加入到 frontend 和 backend 。</li>\n<li>db 和 proxy 不能通讯，因为不在一个网络中。</li>\n<li>app 和两个都能通讯，因为 app 在两个网络中都有配置。</li>\n<li>db 和 proxy 要通讯，只能通过 app 这个应用来连接。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"设置默认网络\"><a class=\"anchor\" href=\"#设置默认网络\">#</a> 设置默认网络</h3>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># Use a custom driver</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">driver</span><span class=\"token punctuation\">:</span> custom<span class=\"token punctuation\">-</span>driver<span class=\"token punctuation\">-</span><span class=\"token number\">1</span></pre></td></tr></table></figure><h3 id=\"指定一个已经存在的网络\"><a class=\"anchor\" href=\"#指定一个已经存在的网络\">#</a> 指定一个已经存在的网络</h3>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> frontend</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">frontend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> backend</pre></td></tr></table></figure>",
            "tags": [
                "Docker",
                "Linux",
                "Docker"
            ]
        }
    ]
}